{"version":3,"sources":["components/Properties/SheetPropertiesJson.jsx","components/IFormDesignerLayout/IFormDesignerComponents/SheetProperties/SheetProperties.jsx","Icons/Layers.jsx"],"names":["SheetPropertiesJson","SheetProperties","props","_window","_window$appformBuilde","_window2","_window2$appformBuild","contexts","GetStateFromData","containerId","_contexts$contexts","updateJson","changeSectionLayout","formState2","deleteControl","setQuickToolsClose","updatedComponentInFormState","removeAndUpdateComponentInFormState","_useTranslation","useTranslation","t","translationStyles1","window","appformBuilder_configs","selectedLanguage","useLayoutEffect","sheetArray","i","length","document","getElementById","style","border","background","selectedControl","ColumnLayout","CollapsibleItems","Object","keys","forEach","key","index","collapseComponentBody","property","push","prepareHtmlTag","ControlsMap","type","_jsx","CollapsibleComponent","id","heading","body","setToggleValue","value","label","handleToggle","e","field","target","handleLayoutChange","_props$selectedContro","_props$selectedContro2","_jsxs2","toLowerCase","_jsxs","className","styles","parentDiv","children","leftLabel","concat","toggleCheckboxArabic","toggleCheckbox","ToggleBtn","toggleState","sheetType","ActiveIcon","layout","defaultValue","spacing","labelPosition","labelStyle","fontSize","activeStyle","padding","margin","width","color","inActiveStyle","passedValue","_defineProperty","TabColumn1","paddingRight","TabColumn2","TabColumn3","TabColumn4","TabColumn5","TabColumn6","_Fragment","ControlLabel","handleDelete","Card","Body","cardBodySheetProperties","map","item","Layers","xmlns","height","viewBox","d","transform"],"mappings":"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","file":"static/js/SheetProperties.b95f39dd9a010c3f9997.js","sourcesContent":["import React from 'react';\r\n\r\n    const SheetPropertiesJson = {\r\n        \"View\" :{\r\n            \"Icons\" : \"\"\r\n        },\r\n        \"Basic\" : { \r\n            \"ReadOnly\" : \"\",\r\n            \"ReadOnlyStyle\" : \"\"\r\n        },\r\n        \"Display\": {\r\n            \"MobileVisible\": \"\", \r\n            \"TabsVisible\": \"\",\r\n        },\r\n\r\n}\r\n\r\nexport default SheetPropertiesJson;\r\n","import React, { useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport SvgDeleteIcon from \"../../../../Icons/DeleteIcon\";\r\nimport styles from \"../../../LeftNavigation/DesignerControls/BasicControls.module.css\";\r\nimport {Card,Row,Col} from 'react-bootstrap';\r\nimport ToggleBtn from '../../../../ReusableComponents/ToggleBtn/ToggleBtn';\r\nimport ControlsMap from '../../../Properties/PropertiesConfiguration';\r\nimport SheetPropertiesJson from \"../../../Properties/SheetPropertiesJson\";\r\nimport CollapsibleComponent from '../../../../ReusableComponents/CollapseCard/CollapseCard';\r\nimport {ReactComponent as TabColumn1} from \"../../../../Icons/TabColumn1.svg\";\r\nimport {ReactComponent as TabColumn2} from \"../../../../Icons/TabColumn2.svg\";\r\nimport {ReactComponent as TabColumn3} from \"../../../../Icons/TabColumn3.svg\";\r\nimport {ReactComponent as TabColumn4} from \"../../../../Icons/TabColumn4.svg\";\r\nimport {ReactComponent as TabColumn5} from \"../../../../Icons/TabColumn5.svg\";\r\nimport {ReactComponent as TabColumn6} from \"../../../../Icons/TabColumn6.svg\";\r\nimport Layers from \"../../../../Icons/Layers\";\r\nimport ControlLabel from '../../../../ReusableComponents/ControlLabel/ControlLabel'\r\nimport ActiveIcon from \"../../../../ReusableComponents/ActiveIcon/ActiveIcon\";\r\nimport {AppContext} from '../../../../Resources/CanvasContextFile';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {useDispatch,addContexts,useSelector} from \"../../../../Redux\"\r\nimport { GetStateFromData } from '../../../CustomHooks/CustomHooks';\r\n\r\n\r\nconst SheetProperties = (props) => {\r\n    const contexts = GetStateFromData(props.containerId);\r\n      const {updateJson, changeSectionLayout, formState2, deleteControl,setQuickToolsClose }=contexts.contexts;\r\n      const { updatedComponentInFormState, removeAndUpdateComponentInFormState} =updateJson;\r\n\r\n    // const { updateJson,deleteControl } = useContext(AppContext);\r\n    // const { updatedComponentInFormState, removeAndUpdateComponentInFormState} =updateJson;\r\n    const { t } = useTranslation(['styles', 'translation']);\r\n    const translationStyles1 = window?.appformBuilder_configs?.selectedLanguage === \"ar\" || window?.appformBuilder_configs?.selectedLanguage === \"ar-SA\";\r\n    useLayoutEffect(()=>{\r\n        //console.log(\"selectedControl :: \" , props.selectedControl);\r\n        //console.log(\"colcol\" + props.selectedControl.ColumnLayout);\r\n        var sheetArray=[1,2,3,4,6,12];\r\n      //  document.getElementById(\"id\").style.color=\"#0072c6\";\r\n        for(var i=0;i<sheetArray.length;i++)\r\n        {\r\n            // if(props.selectedControl.ColumnLayout!==null && props.selectedControl.ColumnLayout!==undefined && props.selectedControl.ColumnLayout===(i+1)){\r\n            //     document.getElementById('COL'+props.selectedControl.ColumnLayout).style.border=\"1px solid #0072c6\";\r\n            //     document.getElementById('COL'+props.selectedControl.ColumnLayout).style.background= \"#0072C60D 0% 0% no-repeat padding-box\";\r\n            // } else \r\n            if(document.getElementById('COL'+(i+1))!==null){\r\n                document.getElementById('COL'+(i+1)).style.border=\"1px solid #C6C9CF\";\r\n                document.getElementById('COL'+(i+1)).style.background=\"#FFFFFF\";\r\n            }\r\n        }\r\n        //console.log('DEFAULT:::'+'COL'+props.selectedControl.ColumnLayout);\r\n        //console.log('COLUMN_LAYOUT_DIV :: ',document.getElementById('COL'+props.selectedControl.ColumnLayout+''));\r\n        if(document.getElementById('COL'+props.selectedControl.ColumnLayout)!==null)\r\n        {\r\n           //console.log(\"colcol\" + props.selectedControl.ColumnLayout);\r\n           document.getElementById('COL'+props.selectedControl.ColumnLayout).style.border=\"1px solid #0072c6\";\r\n           document.getElementById('COL'+props.selectedControl.ColumnLayout).style.background= \"#0072C60D 0% 0% no-repeat padding-box\";\r\n           //console.log('default olumnLayout fror sheet is '+props.selectedControl.ColumnLayout);\r\n           //console.log('same is set on '+'COL'+props.selectedControl.ColumnLayout);\r\n\r\n        }\r\n        //    if(document.getElementById('COL'+props.selectedControl.ColumnLayout)!==null){\r\n        //        for(var i=0;i<sheetArray.length;i++)\r\n        //        {\r\n        //            if(sheetArray[i]!==props.selectedControl.ColumnLayout)\r\n        //            {\r\n        //             //console.log(\"colcolabcde\");\r\n        //             document.getElementById('COL'+sheetArray[i]).style.border=\"1px solid #DADADA\";\r\n        //             document.getElementById('COL'+sheetArray[i]).style.background= \"#FFFFFF 0% 0% no-repeat padding-box\";  \r\n        //            }\r\n        //        }\r\n        //    }\r\n        //    document.getElementById('COL'+props.selectedControl.ColumnLayout).style.background= \"#0072C60D 0% 0% no-repeat padding-box\"\r\n\r\n       // document.getElementById(\"COL1\").style.color=\"block\";\r\n        // background: #0072C60D 0% 0% no-repeat padding-box;\r\n        // border: 1px solid #0072c6;\r\n    })\r\n\r\n\r\n    //console.log(\"sheet\", props.selectedControl);\r\n    //console.log('Column Layout :: '+props.selectedControl.ColumnLayout);\r\n    // const {changeSectionLayout} = useContext(AppContext);\r\n     \r\n    var CollapsibleItems = [];\r\n    Object.keys(SheetPropertiesJson).forEach((key,index)=>{\r\n        var collapseComponentBody = [];\r\n        Object.keys(SheetPropertiesJson[key]).forEach((property)=>{\r\n                collapseComponentBody.push(prepareHtmlTag(property,ControlsMap[property].type));    \r\n        })\r\n        CollapsibleItems.push(<CollapsibleComponent id={index+\"\"} heading={key} body={collapseComponentBody}/>);\r\n    })\r\n\r\n    // props.selectedControl.ColumnLayout=2;\r\n    function setToggleValue(value, label) {\r\n        //console.log('label::'+label+'| value::'+value);\r\n        // setAddIcon(value);\r\n        // if(value==='false')\r\n        // {\r\n        //     // Object.values(props.selectedControl.children).map((key,index)=>{\r\n\r\n        //     //     if(jsonIcons[key.id]!==undefined)\r\n        //     //     {\r\n        //     //         props.selectedControl.children[index][\"icon\"][\"name\"] = \"\";\r\n        //     //         props.selectedControl.children[index][\"icon\"][\"file\"] = \"\";\r\n        //     //         updatedComponentInFormState(props.selectedControl.id, props.selectedControl)\r\n        //     //     }\r\n        //     // });\r\n        // }else{\r\n        //     // Object.values(props.selectedControl.children).map((key,index)=>{\r\n        //     //     if(jsonIcons[key.id]!==undefined)\r\n        //     //     {\r\n        //     //         props.selectedControl.children[index][\"icon\"][\"name\"] = jsonIcons[key.id].name;\r\n        //     //         props.selectedControl.children[index][\"icon\"][\"file\"] = jsonIcons[key.id].file;\r\n        //     //         updatedComponentInFormState(props.selectedControl.id, props.selectedControl)\r\n        //     //     }\r\n        //     // });\r\n        // }\r\n        //setOpen(!open);\r\n    }\r\n   \r\n    function handleToggle(e,field){\r\n        const value=e.target.value;\r\n     //   props.selectedControl.style[field] = value;\r\n        // console.log(value, field);\r\n        if(props.selectedControl.style)\r\n            props.selectedControl.style[field] = value+\"\";\r\n        else {\r\n            props.selectedControl.style = {};\r\n            props.selectedControl.style[field] = value+\"\";\r\n        }\r\n        // let updatedState = {...props.selectedControl};\r\n        if(field === \"Enable\") {\r\n          props.selectedControl.style[\"previousEnable\"] = value;\r\n          // updatedState = changeControlProperty(value,field,updatedState);\r\n        }\r\n        if(field === \"ReadOnlyStyle\") {\r\n          props.selectedControl.style[\"previousReadOnly\"] = value;\r\n          // updatedState = changeControlProperty(value,field,updatedState);\r\n        }\r\n        if(field === \"ReadOnly\") {\r\n          props.selectedControl.style[\"previousReadOnlyValue\"] = value;\r\n          // updatedState = changeControlProperty(value,field,updatedState);\r\n        }\r\n        updatedComponentInFormState(props.selectedControl.id , props.selectedControl)\r\n    }\r\n    function handleLayoutChange(value){\r\n        changeSectionLayout(value,props.selectedControl);\r\n    }\r\n    function prepareHtmlTag(key,type) {\r\n\r\n        switch(type.toLowerCase()){\r\n            \r\n            // case \"toggle\" : return(\r\n            //     <div className={styles.parentDiv}>\r\n            //             <span className={styles.leftLabel} >{t(`translation:${ControlsMap[key].label}`)}</span>\r\n            //             <ToggleBtn  handleStyleChange={(value)=>setToggleValue(value, ControlsMap[key].label)}/> \r\n            //         </div>\r\n            //     )\r\n\r\n            case \"toggle\" : return(\r\n                <div className={styles.parentDiv}>\r\n                        <span className={styles.leftLabel} >{t(`translation:${ControlsMap[key].label}`)}</span>\r\n                        <div className={translationStyles1 ? styles.toggleCheckboxArabic : styles.toggleCheckbox}>\r\n                      <ToggleBtn \r\n                     toggleState={props.selectedControl?.style?.[key]} \r\n                      handleToggle={handleToggle}\r\n                      field={key}\r\n                         />\r\n                          </div>\r\n                    </div>\r\n                )\r\n\r\n            case \"icon\" : return(\r\n                (<div  className={styles.sheetType}>\r\n                <ActiveIcon \r\n                layout=\"3\" \r\n                defaultValue=\"1\" \r\n                spacing=\"0\"\r\n                labelPosition=\"in\"\r\n                labelStyle={{fontSize:\"11px\"}}\r\n                activeStyle={{padding:\"6px\",margin:\"0\",background:\"#fff\",border: \"1px solid #0072c6\",width:\"89px\",color:\"#0072C6\"}} \r\n                inActiveStyle={{padding:\"6px\",margin:\"0\",background:\"#fff\",border: \"1px solid #c6c9cf\",width:\"89px\"}} \r\n                 passedValue={props.selectedControl.ColumnLayout} activeStyle={{width:\"84px\"}} layout=\"3\" inActiveStyle={{width:\"84px\"}}\r\n                handleStyleType={handleLayoutChange}>\r\n                 <TabColumn1 value=\"1\" label=\"1 COLUMN\" style={{ paddingRight: \"9px\" }} />\r\n                <TabColumn2 value=\"2\" label=\"2 COLUMNS\"style={{paddingRight:\"9px\"}}  />\r\n                <TabColumn3 value=\"3\" label=\"3 COLUMNS\"style={{paddingRight:\"9px\"}}  />\r\n                <TabColumn4 value=\"4\" label=\"4 COLUMNS\"style={{paddingRight:\"9px\"}}  />\r\n                <TabColumn5 value=\"6\" label=\"6 COLUMNS\"style={{paddingRight:\"9px\"}}  />\r\n                <TabColumn6 value=\"12\" label=\"12 COLUMNS\"style={{paddingRight:\"9px\"}}  />\r\n                </ActiveIcon>\r\n                    {/* <Row>\r\n                        <div id=\"COL1\" key=\"COL1\" \r\n                        // className={styles.sheetLayoutStyle}\r\n                        className={parseInt(props.selectedControl.ColumnLayout)===1? styles.sheetLayoutStyleAfterClick: styles.sheetLayoutStyle}\r\n                        \r\n                        onClick={()=>changeSectionLayout(1, props.selectedControl)} >\r\n                            <div className={styles.StyleForSheet} >\r\n                                <TabColumn1/>\r\n                                <div className={styles.StyleTextSheet} >1 COL</div>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div id=\"COL2\" key=\"COL2\" \r\n                        // className={styles.sheetLayoutStyle}\r\n                        className={parseInt(props.selectedControl.ColumnLayout)===2? styles.sheetLayoutStyleAfterClick: styles.sheetLayoutStyle}\r\n\r\n                                onClick={()=>changeSectionLayout(2, props.selectedControl)} >\r\n\r\n                        <div className={styles.StyleForSheet}   >\r\n                        <TabColumn2/>\r\n                            <div className={styles.StyleTextSheet} >2 COL</div>\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                        <div id=\"COL3\" key=\"COL3\" \r\n                        className={parseInt(props.selectedControl.ColumnLayout)===3? styles.sheetLayoutStyleAfterClick: styles.sheetLayoutStyle}\r\n                            // className={styles.sheetLayoutStyle}\r\n                            \r\n                            onClick={()=>changeSectionLayout(3, props.selectedControl)}  >\r\n\r\n                                <div className={styles.StyleForSheet}  >\r\n                            \r\n                                <TabColumn3/>\r\n                                <div className={styles.StyleTextSheet} >3 COL</div>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <div id=\"COL4\" key=\"COL4\" \r\n                        // className={styles.sheetLayoutStyle}\r\n                        className={parseInt(props.selectedControl.ColumnLayout)===4? styles.sheetLayoutStyleAfterClick: styles.sheetLayoutStyle}\r\n                            \r\n                            onClick={()=>changeSectionLayout(4, props.selectedControl)} >\r\n\r\n                            <div className={styles.StyleForSheet} >\r\n                            <TabColumn4/>\r\n                            <div className={styles.StyleTextSheet} >4 COL</div>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div id=\"COL6\" key=\"COL6\" \r\n                        // className={styles.sheetLayoutStyle}\r\n                        className={parseInt(props.selectedControl.ColumnLayout)===6? styles.sheetLayoutStyleAfterClick: styles.sheetLayoutStyle}\r\n                            \r\n                            onClick={()=>changeSectionLayout(6, props.selectedControl)} >\r\n\r\n                        <div className={styles.StyleForSheet}   >\r\n                        <TabColumn5/>\r\n                        <div className={styles.StyleTextSheet} >6 COL</div>\r\n                        </div>\r\n\r\n                        </div>\r\n\r\n                        <div id=\"COL12\" key=\"COL12\" \r\n                        // className={\r\n                        //      (parseInt(props.selectedControl.ColumnLayout) ===\"12\")?\r\n                        //     styles.sheetLayoutStyleAfterClick : styles.sheetLayoutStyle}\r\n                            // className={styles.sheetLayoutStyle}\r\n                            className={parseInt(props.selectedControl.ColumnLayout)===12? styles.sheetLayoutStyleAfterClick: styles.sheetLayoutStyle}\r\n                            \r\n                            onClick={()=>changeSectionLayout(12, props.selectedControl)} >\r\n\r\n                                <div className={styles.StyleForSheet}  >\r\n                            \r\n                                <TabColumn6/>\r\n                                <div className={styles.StyleTextSheet} >12 COL</div>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </Row> */}\r\n\r\n                </div>)\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <div className={styles.elementPropertiesHeader}>\r\n                <span className={styles.selectedControlTitle}>Tab </span>\r\n                <div className={styles.deleteIcon} >\r\n                <Layers className={styles.svgDeleteIcon}/> &nbsp;  &nbsp;\r\n                    <SvgDeleteIcon className={styles.svgDeleteIcon} /></div>\r\n            </div> */}\r\n            <ControlLabel label=\"Tab\" handleDelete={deleteControl} id={props.selectedControl.id} />\r\n            <div className=\"propertiesBody\">\r\n            <Card.Body className={styles.cardBodySheetProperties}>\r\n                {\r\n                    CollapsibleItems.map((item, index) => {\r\n                        return item;\r\n                    })\r\n                }\r\n            </Card.Body>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SheetProperties;","import * as React from \"react\";\r\n\r\nfunction Layers() {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.405\" height=\"16.32\" viewBox=\"0 0 15.405 16.32\">\r\n    <path d=\"M12.194,17.155l-6.307-4.9L4.5,13.33l7.7,5.991,7.7-5.991L18.51,12.243Zm.009-2.174,6.3-4.9,1.4-1.087L12.2,3,4.5,8.991l1.395,1.087Z\" transform=\"translate(-4.5 -3)\"/>\r\n    </svg>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Layers;\r\n"],"sourceRoot":""}