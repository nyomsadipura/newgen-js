{"version":3,"sources":["components/Properties/ListviewDataAdditionPropertiesJson.jsx","components/IFormDesignerLayout/IFormDesignerComponents/ListviewProperties/ListviewDataAdditionProperties.jsx"],"names":["ListviewDataAdditionPropertiesJson","ListviewProperties","props","_useState","useState","_useState2","_slicedToArray","showTableBackdrop","setShowTableBackdrop","_useState3","_useState4","selectedColumn","setSelectedColumn","_useState5","_useState6","selectedColumnIndex","setSelectedColumnIndex","_useTranslation","useTranslation","t","handleCombo","comboId","select","document","getElementById","propertyName","getAttribute","optionTag","options","selectedIndex","handleProperty","value","propertyValue","selectedControl","style","applyChanges","formData","handleBackdrop","arg","columnId","columnList","map","obj","index","id","addColumn","newColJson","length","createUniqueId","push","deleteColumn","colId","splice","ControlsMap","CollapsibleItems","Object","keys","forEach","key","collapseComponentBody","property","type","prepareHtmlTag","_jsx","CollapsibleComponent","heading","body","toLowerCase","_jsxs","className","styles","parentDiv","children","leftLabel","concat","label","RightLabelSelectDiv1","RightLabelSelect1","name","onChange","optionTagData","optionCount","Value","selected","Title","RightLabelColorPickerDiv","ColorPicker","handleStyleChange","hexValue","ToggleBtn","toggleState","textAreaParentDiv","textAreaDiv","_Fragment","elementPropertiesHeader","selectedControlTitle","deleteIcon","SvgDeleteIcon","svgDeleteIcon","Card","Body","cardBodyButtonProperties","item"],"mappings":"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","file":"static/js/ListviewDataAdditionProperties.513fca95d9a48b89e5f4.js","sourcesContent":["const ListviewDataAdditionPropertiesJson = {\r\n    \"Basic\" :{\r\n        \"Title\" : \"\",\r\n        \"SectionBackground\" : \"\",\r\n        \"ButtonAlignment\" : \"\"\r\n    },\r\n    \"Title\" :{ \r\n        \"ShowTitle\" : \"\",\r\n        \"FontFamily\" : \"\",\r\n        \"FontSize\" : \"\",\r\n        \"FontStyle\" : \"\",\r\n    }                 \r\n}\r\n\r\nexport default ListviewDataAdditionPropertiesJson;\r\n","import React,{useState} from 'react'\r\nimport {Card,Row,Col} from 'react-bootstrap'\r\nimport ControlsMap from '../../../Properties/PropertiesConfiguration'\r\nimport ListviewDataAdditionPropertiesJson from \"../../../Properties/ListviewDataAdditionPropertiesJson\"\r\nimport CollapsibleComponent from \"../../../../ReusableComponents/CollapseCard/CollapseCard\";\r\nimport styles from \"../../../LeftNavigation/DesignerControls/BasicControls.module.css\"\r\nimport ColorPicker from \"../../../../ReusableComponents/ColorPicker/ColorPicker\"\r\nimport ToggleBtn from \"../../../../ReusableComponents/ToggleBtn/ToggleBtn\"\r\nimport SvgDeleteIcon from \"../../../../Icons/DeleteIcon\"\r\nimport AddColumnIcon from \"../../../../Icons/AddColumnIcon\"\r\nimport SvgEditIcon from \"../../../../Icons/EditIcon\"\r\nimport SvgCardIcon from \"../../../../Icons/CardIcon\"\r\nimport SvgLinedIcon from \"../../../../Icons/LinedIcon\"\r\nimport SvgBoxIcon from \"../../../../Icons/BoxIcon\"\r\nimport SvgStripedIcon from \"../../../../Icons/StripedIcon\"\r\nimport SvgDeleteWhiteIcon from \"../../../../Icons/DeleteWhiteIcon\"\r\nimport TableBackdrop from '../TableProperties/TableBackdrop'\r\nimport { createUniqueId } from '../../IFormDesignerLogic';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n\r\nconst ListviewProperties=(props)=>{\r\n    \r\n    \r\n    const[showTableBackdrop, setShowTableBackdrop] = useState(false);\r\n    const[selectedColumn, setSelectedColumn] = useState();\r\n    const[selectedColumnIndex, setSelectedColumnIndex] = useState(0);\r\n    const { t } = useTranslation(['styles', 'translation']);\r\n    \r\n    function handleCombo(comboId){\r\n       var select = document.getElementById(comboId);\r\n       var propertyName = select.getAttribute(\"name\");\r\n       var optionTag = select.options[select.selectedIndex];\r\n       handleProperty(propertyName, optionTag.value);\r\n    }\r\n    function handleProperty(propertyName, propertyValue){\r\n        \r\n        props.selectedControl.style[propertyName] = propertyValue;\r\n        props.applyChanges(props.formData); \r\n    }\r\n       \r\n   function handleBackdrop(arg, columnId){\r\n       if(arg===true){\r\n           props.selectedControl.columnList.map((obj,index)=>{\r\n            if(columnId === obj.id){\r\n              setSelectedColumn(obj);\r\n              setSelectedColumnIndex(index);\r\n                }\r\n            })\r\n       } else if(arg===false){\r\n\r\n            props.applyChanges(props.formData)\r\n       }\r\n       \r\n       setShowTableBackdrop(arg);\r\n   }\r\n   function addColumn(){\r\n       var newColJson = {'elem_type':'column',\r\n                        'style':{'ColumnName' : \"Column\" + (props.selectedControl.columnList.length+1) }\r\n        }\r\n                newColJson.id = createUniqueId('column');\r\n                props.selectedControl.columnList.push(newColJson);\r\n                props.formData[\"table\"] = props.selectedControl;\r\n                setSelectedColumn(newColJson);\r\n                // props.applyChanges(props.formData);\r\n                setShowTableBackdrop(true);\r\n\r\n   }\r\n  function deleteColumn(colId){\r\n      props.selectedControl.columnList.map((obj,index)=>{\r\n          if(colId === obj.id){\r\n              props.selectedControl.columnList.splice(index,1);\r\n              props.formData[\"table\"] = props.selectedControl;\r\n              props.applyChanges(props.formData);\r\n              return;\r\n          }\r\n      })\r\n  }\r\n  if(ListviewDataAdditionPropertiesJson && ControlsMap){\r\n    var CollapsibleItems = [];\r\n    Object.keys(ListviewDataAdditionPropertiesJson).forEach((key,index)=>{\r\n        var collapseComponentBody = [];\r\n        Object.keys(ListviewDataAdditionPropertiesJson[key]).forEach((property)=>{ \r\n            if(ControlsMap[property] && ControlsMap[property].type){\r\n                collapseComponentBody.push(prepareHtmlTag(property,ControlsMap[property].type));\r\n            \r\n            }\r\n        })\r\n        if(CollapsibleItems=== []){\r\n            CollapsibleItems.push(<CollapsibleComponent id={index+\"\"} heading={key} body={collapseComponentBody}/>);\r\n        }\r\n\r\n        CollapsibleItems.push(<CollapsibleComponent id={index+\"\"} heading={key} body={collapseComponentBody}/>);\r\n    })\r\n    }\r\n    function prepareHtmlTag(key,type, colId) {\r\n        \r\n            switch(type.toLowerCase()){\r\n                case \"combo\" : return (\r\n                            <div className={styles.parentDiv}>\r\n                    <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n                    <div className={styles.RightLabelSelectDiv1}>\r\n                        <select className={styles.RightLabelSelect1} name={key} id={props.selectedControl.id+ControlsMap[key].label} onChange={()=>handleCombo(props.selectedControl.id+ControlsMap[key].label)}>\r\n                        {ControlsMap[key].children.map((optionTagData,optionCount)=>{\r\n                            if(ControlsMap[key].children[optionCount].Value){\r\n                                return <option value={ControlsMap[key].children[optionCount].Value} selected>{ControlsMap[key].children[optionCount].Title}</option>\r\n                            }else {\r\n                                return <option value={ControlsMap[key].children[optionCount].Value}></option>\r\n                            }\r\n                        })}\r\n                        </select>\r\n                    </div>\r\n                    </div>\r\n                        )\r\n                 \r\n                case \"colorpicker\" : return(\r\n                    <div className={styles.parentDiv}>\r\n                        <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n                        <div className={styles.RightLabelColorPickerDiv}>\r\n                            <ColorPicker handleStyleChange={(hexValue)=>handleProperty(key, hexValue)}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n\r\n                case \"toggle\" : return(\r\n                <div className={styles.parentDiv}>\r\n                        <span className={styles.leftLabel} >{t(`translation:${ControlsMap[key].label}`)}</span>\r\n                        <ToggleBtn toggleState={props.selectedControl.style[key]} handleStyleChange={(value)=>handleProperty(key, value)}/> \r\n                    </div>\r\n                )\r\n\r\n                case \"textarea\" : return(\r\n                <div className={styles.textAreaParentDiv}>\r\n                        <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n                        <div>\r\n                        <textarea aria-label={ControlsMap[key].label} className={styles.textAreaDiv}/>\r\n                        </div>\r\n                    </div>\r\n                )      \r\n        }\r\n\r\n    }\r\n\r\n\r\nreturn (\r\n        <>\r\n        <div className={styles.elementPropertiesHeader}>\r\n                        <span className={styles.selectedControlTitle}>Listview Data Addition</span>\r\n                        <div className={styles.deleteIcon}><SvgDeleteIcon className={styles.svgDeleteIcon}/></div>\r\n        </div>\r\n        <Card.Body className={styles.cardBodyButtonProperties}>\r\n            {\r\n                CollapsibleItems.map((item,index)=>{\r\n                    return item;\r\n                })\r\n            }\r\n        </Card.Body>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ListviewProperties;"],"sourceRoot":""}