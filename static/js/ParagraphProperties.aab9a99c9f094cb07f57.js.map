{"version":3,"sources":["components/Properties/ParagraphPropertiesJson.jsx","components/IFormDesignerLayout/IFormDesignerComponents/ParagraphProperties/ParagraphProperties.jsx"],"names":["ParagraphPropertiesJson","ParagraphProperties","props","_props$selectedContro","_window","_window$appformBuilde","_window2","_window2$appformBuild","_props$selectedContro2","_props$selectedContro3","contexts","GetStateFromData","containerId","_contexts$contexts","updateJson","deleteControl","showAlertConfirmNotifications","updatedComponentInFormState","_useState","useState","_useState2","_slicedToArray","errorMessageId","setErrorMessageId","_useState3","open","showConfirm","_useState4","alertData","setAlertData","_useTranslation","useTranslation","t","_useState5","selectedControl","style","_useState6","customId","setCustomId","translationStyles1","window","appformBuilder_configs","selectedLanguage","handleCombo","comboId","select","document","getElementById","propertyName","getAttribute","optionTag","options","selectedIndex","handleProperty","value","propertyValue","event","CustomId","element","target","console","log","jsonToSend","customControlId","controlid","id","validateCustomControlId","then","response","data","status","temp_style","updatedJson","updateUserId","alertType","alertContentKey","catch","error","concat","applyChanges","formData","validateRegex","inputBoxId","which","code","regexValidator","ControlsMap","preventDefault","_objectSpread","key","e","handleToggle","field","deleteProperty","CollapsibleItems","Object","keys","forEach","index","collapseComponentBody","property","type","push","prepareHtmlTag","_jsx","CollapsibleComponent","heading","body","colId","toLowerCase","_Fragment","children","_jsxs","className","styles","parentDiv","display","leftLabel","label","RightLabelSelectDiv2","RightLabelSelect1","name","onChange","map","optionTagData","optionCount","Value","_ControlsMap$key$chil","selected","Title","Form","Group","parentDivTopBottom","topBottomLabel","fullWidthTextBox","inputBoxErrorStyle","join","onKeyUp","onBlur","defaultValue","onKeyPress","ErrorMessageComponent","errorMessage","toggleBtn","ToggleBtn","toggleState","parentDiv3","fullWidthInputText","redCrossSpan","onClick","RedCross","ControlLabel","handleDelete","item","CustomizedAlert"],"mappings":"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","file":"static/js/ParagraphProperties.aab9a99c9f094cb07f57.js","sourcesContent":["import React from 'react';\r\n\r\n    const ParagraphPropertiesJson = {\r\n        \"Basic\" :{\r\n            // \"UserDefinedControlId\" : \"\",\r\n            \"CustomId\":'',\r\n            \"Visible\" : \"\",\r\n            // \"ParagraphAlignment\" : \"\"\r\n        },\r\n        \"Display\": {\r\n            \"MobileVisible\": \"\", \r\n            \"TabsVisible\": \"\",\r\n        },\r\n        \"Spacing\" : {\r\n            \"SpacingLeft\" : \"\",\r\n\t\t\t\"SpacingRight\" : \"\",\r\n\t\t\t\"SpacingTop\" : \"\",\r\n\t\t\t\"SpacingBottom\" : \"\",\r\n        }\r\n\r\n\t\t\t\t\t \r\n}\r\n\r\nexport default ParagraphPropertiesJson;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ControlsMap from \"../../../Properties/PropertiesConfiguration\";\r\nimport ParagraphPropertiesJson from \"../../../Properties/ParagraphPropertiesJson\";\r\nimport CollapsibleComponent from \"../../../../ReusableComponents/CollapseCard/CollapseCard\";\r\nimport styles from \"../../../LeftNavigation/DesignerControls/BasicControls.module.css\";\r\nimport RedCross from \"../../../../Icons/RedCross\";\r\nimport ToggleBtn from \"../../../../ReusableComponents/ToggleBtn/ToggleBtn\";\r\nimport ControlLabel from \"../../../../ReusableComponents/ControlLabel/ControlLabel\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { validateCustomControlId } from \"../../RequestLogic\";\r\nimport { updateUserId } from \"../../Logic/UserIdLogic\";\r\nimport { regexValidator } from \"../../../../Resources/globalFunctions\";\r\nimport ErrorMessageComponent from \"../../../../ReusableComponents/ErrorMessageComponent/ErrorMessageComponent\";\r\nimport CustomizedAlert from \"../../../../ReusableComponents/Alert/CustomizedAlert\";\r\nimport { GetStateFromData } from \"../../../CustomHooks/CustomHooks\";\r\n\r\nconst ParagraphProperties = (props) => {\r\n  const contexts = GetStateFromData(props.containerId);\r\n  const { updateJson, deleteControl, showAlertConfirmNotifications } =\r\n    contexts.contexts;\r\n  const { updatedComponentInFormState } = updateJson;\r\n\r\n  const [errorMessageId, setErrorMessageId] = useState(false);\r\n\r\n  const [alertData, setAlertData] = useState({\r\n    open: false,\r\n    showConfirm: \"showNotification\",\r\n  });\r\n  const { t } = useTranslation([\"styles\", \"translation\"]);\r\n  const [customId, setCustomId] = useState(\r\n    props?.selectedControl?.style[\"CustomId\"]\r\n  );\r\n  const translationStyles1 =\r\n    window?.appformBuilder_configs?.selectedLanguage === \"ar\" ||\r\n    window?.appformBuilder_configs?.selectedLanguage === \"ar-SA\";\r\n\r\n  function handleCombo(comboId) {\r\n    var select = document.getElementById(comboId);\r\n    var propertyName = select.getAttribute(\"name\");\r\n    var optionTag = select.options[select.selectedIndex];\r\n    handleProperty(propertyName, optionTag.value);\r\n  }\r\n\r\n  function handleProperty(propertyName, propertyValue, event) {\r\n    if (propertyName === \"CustomId\") {\r\n      if (propertyValue !== props.selectedControl.style.CustomId) {\r\n        var element = event.target;\r\n        console.log(\r\n          \"id\",\r\n          props.selectedControl,\r\n          \"propertyValue::\" + propertyValue\r\n        );\r\n        var jsonToSend = {\r\n          customControlId: propertyValue,\r\n          controlid: props.selectedControl.id,\r\n        };\r\n        validateCustomControlId(jsonToSend)\r\n          .then((response) => {\r\n            if (response && response.data && response.data.status === \"0\") {\r\n              let temp_style = props.selectedControl.style;\r\n              let updatedJson = updateUserId(\r\n                props.selectedControl, // whole control Json\r\n                propertyValue //newly defined id\r\n              );\r\n              if (updatedJson) {\r\n                updatedComponentInFormState(\r\n                  props.selectedControl.id,\r\n                  updatedJson\r\n                );\r\n              }\r\n            } else if (\r\n              response &&\r\n              response.data &&\r\n              response.data.status === \"-1\"\r\n            ) {\r\n              showAlertConfirmNotifications({\r\n                open: true,\r\n                showConfirm: \"showNotification\",\r\n                alertType: \"error\",\r\n                alertContentKey: \"CustomControl Id already Exist\",\r\n              });\r\n\r\n              element.value = props.selectedControl.style.CustomId || \"\";\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            element.value = props.selectedControl.style.CustomId || \"\";\r\n            console.log(error);\r\n            showAlertConfirmNotifications({\r\n              open: true,\r\n              showConfirm: \"showNotification\",\r\n              alertType: \"error\",\r\n              alertContentKey: `Server side error ${error}`,\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      props.selectedControl.style[propertyName] = propertyValue;\r\n      props.applyChanges(props.formData);\r\n      updatedComponentInFormState(\r\n        props.selectedControl.id,\r\n        props.selectedControl\r\n      );\r\n    }\r\n  }\r\n\r\n  function validateRegex(propertyName, propertyValue, event, inputBoxId) {\r\n    try {\r\n      if (propertyName === \"CustomId\") {\r\n        if (\r\n          event &&\r\n          event.which !== 8 &&\r\n          event.which !== 46 &&\r\n          event.code !== \"Tab\" &&\r\n          !regexValidator(propertyValue, ControlsMap[propertyName][\"regexType\"])\r\n        ) {\r\n          event.preventDefault();\r\n          setAlertData({\r\n            ...ControlsMap[\"customizedAlertNotificationData\"],\r\n            open: true,\r\n            alertContentKey: \"RegexErrorMessage\",\r\n          });\r\n        } else {\r\n          setCustomId(propertyValue);\r\n          setErrorMessageId(false);\r\n        }\r\n      } else {\r\n        if (\r\n          event &&\r\n          event.which !== 8 &&\r\n          event.which !== 46 &&\r\n          event.code !== \"Tab\" &&\r\n          !regexValidator(event.key, ControlsMap[propertyName][\"regexType\"])\r\n        ) {\r\n          event.preventDefault();\r\n          setAlertData({\r\n            ...ControlsMap[\"customizedAlertNotificationData\"],\r\n            open: true,\r\n            alertContentKey: \"RegexErrorMessage\",\r\n          });\r\n        } else {\r\n          setErrorMessageId(false);\r\n        }\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  function handleToggle(e, field) {\r\n    const value = e.target.value;\r\n    props.selectedControl.style[field] = value;\r\n    updatedComponentInFormState(\r\n      props.selectedControl.id,\r\n      props.selectedControl\r\n    );\r\n  }\r\n\r\n  function deleteProperty(propertyName) {\r\n    delete props.selectedControl.style[propertyName];\r\n    props.applyChanges(props.formData);\r\n  }\r\n\r\n  if (ParagraphPropertiesJson && ControlsMap) {\r\n    var CollapsibleItems = [];\r\n    Object.keys(ParagraphPropertiesJson).forEach((key, index) => {\r\n      var collapseComponentBody = [];\r\n      Object.keys(ParagraphPropertiesJson[key]).forEach((property) => {\r\n        if (ControlsMap[property] && ControlsMap[property].type) {\r\n          collapseComponentBody.push(\r\n            prepareHtmlTag(property, ControlsMap[property].type)\r\n          );\r\n        }\r\n      });\r\n      if (CollapsibleItems === []) {\r\n        CollapsibleItems.push(\r\n          <CollapsibleComponent\r\n            id={index + \"\"}\r\n            heading={key}\r\n            body={collapseComponentBody}\r\n          />\r\n        );\r\n      }\r\n\r\n      CollapsibleItems.push(\r\n        <CollapsibleComponent\r\n          id={index + \"\"}\r\n          heading={key}\r\n          body={collapseComponentBody}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  function prepareHtmlTag(key, type, colId) {\r\n    switch (type.toLowerCase()) {\r\n      case \"combo\":\r\n        return (\r\n          <>\r\n            <div\r\n              className={styles.parentDiv}\r\n              style={translationStyles1 ? { display: \"flex\" } : null}\r\n            >\r\n              <span className={styles.leftLabel}>\r\n                {t(`translation:${ControlsMap[key].label}`)}\r\n              </span>\r\n              <div className={styles.RightLabelSelectDiv2}>\r\n                <select\r\n                  className={styles.RightLabelSelect1}\r\n                  name={key}\r\n                  id={props.selectedControl.id + key}\r\n                  onChange={() => handleCombo(props.selectedControl.id + key)}\r\n                  key={props.selectedControl.id}\r\n                >\r\n                  {ControlsMap[key].children.map(\r\n                    (optionTagData, optionCount) => {\r\n                      if (ControlsMap[key].children[optionCount].Value) {\r\n                        return (\r\n                          <option\r\n                            style={\r\n                              ControlsMap[key].children[optionCount]?.style\r\n                            }\r\n                            value={ControlsMap[key].children[optionCount].Value}\r\n                            selected={\r\n                              ControlsMap[key].children[optionCount].Value ===\r\n                              props.selectedControl.style[key]\r\n                            }\r\n                          >\r\n                            {t(\r\n                              `translation:${ControlsMap[key].children[optionCount].Title}`\r\n                            )}\r\n                          </option>\r\n                        );\r\n                      }\r\n                    }\r\n                  )}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"text_top_bottom\":\r\n        return (\r\n          <Form.Group className={styles.parentDivTopBottom}>\r\n            <div>\r\n              <span className={styles.topBottomLabel}>\r\n                {t(`translation:${ControlsMap[key].label}`)}\r\n              </span>\r\n            </div>\r\n            {key === \"CustomId\" ? (\r\n              <div>\r\n                <input\r\n                  aria-label={\"Control Value1\"}\r\n                  type=\"text\"\r\n                  value={customId}\r\n                  key={props.selectedControl.id}\r\n                  id={props.selectedControl.id + key}\r\n                  className={[\r\n                    styles.fullWidthTextBox,\r\n                    errorMessageId === props.selectedControl.id + key\r\n                      ? styles.inputBoxErrorStyle\r\n                      : null,\r\n                  ].join(\" \")}\r\n                  onChange={(event) =>\r\n                    validateRegex(\r\n                      key,\r\n                      event.target.value,\r\n                      event,\r\n                      props.selectedControl.id + key\r\n                    )\r\n                  }\r\n                  onKeyUp={(event) =>\r\n                    validateRegex(\r\n                      key,\r\n                      event.target.value,\r\n                      event,\r\n                      props.selectedControl.id + key\r\n                    )\r\n                  }\r\n                  onBlur={(event) =>\r\n                    handleProperty(key, event.target.value, event)\r\n                  }\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <input\r\n                  aria-label={\"Control Value1\"}\r\n                  type=\"text\"\r\n                  defaultValue={props.selectedControl.style[key]}\r\n                  key={props.selectedControl.id}\r\n                  id={props.selectedControl.id + key}\r\n                  className={[\r\n                    styles.fullWidthTextBox,\r\n                    errorMessageId === props.selectedControl.id + key\r\n                      ? styles.inputBoxErrorStyle\r\n                      : null,\r\n                  ].join(\" \")}\r\n                  onKeyPress={(event) =>\r\n                    validateRegex(\r\n                      key,\r\n                      event.target.value,\r\n                      event,\r\n                      props.selectedControl.id + key\r\n                    )\r\n                  }\r\n                  onKeyUp={(event) =>\r\n                    validateRegex(\r\n                      key,\r\n                      event.target.value,\r\n                      event,\r\n                      props.selectedControl.id + key\r\n                    )\r\n                  }\r\n                  onBlur={(event) =>\r\n                    handleProperty(key, event.target.value, event)\r\n                  }\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {errorMessageId === props.selectedControl.id + key ? (\r\n              <ErrorMessageComponent errorMessage=\"non-permissible value\" />\r\n            ) : null}\r\n          </Form.Group>\r\n        );\r\n\r\n      case \"toggle\":\r\n        return (\r\n          <div className={styles.toggleBtn}>\r\n            <span> {t(`translation:${ControlsMap[key].label}`)} </span>\r\n            <ToggleBtn\r\n              key={props.selectedControl.id}\r\n              handleToggle={handleToggle}\r\n              field={key}\r\n              toggleState={props.selectedControl.style[key]}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case \"fullwidthtextinput\":\r\n        return (\r\n          <div className={styles.parentDiv3}>\r\n            <span className={styles.leftLabel}>\r\n              {t(`translation:${ControlsMap[key].label}`)}\r\n            </span>\r\n            <input\r\n              aria-label={\"Control Value2\"}\r\n              type=\"text\"\r\n              className={styles.fullWidthInputText}\r\n              onBlur={(event) =>\r\n                handleProperty(ControlsMap[key].label, event.target.value)\r\n              }\r\n              key={props.selectedControl.id}\r\n            />\r\n            {ControlsMap[key].label === \"Mapping\" ? (\r\n              <span\r\n                className={styles.redCrossSpan}\r\n                onClick={() => deleteProperty(ControlsMap[key].label)}\r\n              >\r\n                {props.selectedControl &&\r\n                props.selectedControl.style &&\r\n                props.selectedControl.style[ControlsMap[key].label] ? (\r\n                  <RedCross />\r\n                ) : null}\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ControlLabel\r\n        label=\"Paragraph\"\r\n        handleDelete={deleteControl}\r\n        id={props.selectedControl.id}\r\n        customId={props?.selectedControl?.style?.CustomId}\r\n      />\r\n      <div className=\"propertiesBody\">\r\n        {CollapsibleItems.map((item, index) => {\r\n          return item;\r\n        })}\r\n      </div>\r\n      {alertData.open === true && <CustomizedAlert alertData={alertData} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParagraphProperties;\r\n"],"sourceRoot":""}