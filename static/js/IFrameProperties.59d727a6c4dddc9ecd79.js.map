{"version":3,"sources":["components/Properties/IFrameJson.jsx","components/IFormDesignerLayout/IFormDesignerComponents/IFrameProperties/IFrameProperties.jsx"],"names":["IFrameJson","Basic","Label","CustomId","Visible","FullScreenView","SourceURL","Height","ControlDescription","Display","MobileVisible","TabsVisible","Spacing","SpacingLeft","SpacingRight","SpacingTop","SpacingBottom","IFrameProperties","props","_window","_window$appformBuilde","_window2","_window2$appformBuild","_props$selectedContro6","_props$selectedContro7","translationStyles1","window","appformBuilder_configs","selectedLanguage","contexts","GetStateFromData","containerId","_contexts$contexts","updateJson","changeSectionLayout","formState2","deleteControl","setQuickToolsClose","customControlIdList","setCustomControlIdList","showAlertConfirmNotifications","updatedComponentInFormState","removeAndUpdateComponentInFormState","_useState","useState","open","showConfirm","_useState2","_slicedToArray","alertData","setAlertData","_useState3","_useState4","errorMessageId","setErrorMessageId","_useTranslation","useTranslation","t","src","selectedControl","style","undefined","id","CollapsibleItems","Object","keys","forEach","key","index","collapseComponentBody","property","push","prepareHtmlTag","ControlsMap","type","_jsx","CollapsibleComponent","heading","body","selectedOptionForLabel","selectedControlId","selectedControlLabel","ControlLabelKey","select","document","getElementById","option_tag","options","selectedIndex","temp_style","value","updateEventData","eventJson","count","length","Events","handleProperty","propertyName","propertyValue","event","element","target","jsonToSend","customControlId","controlid","validateCustomControlId","then","response","data","status","updatedJson","updateUserId","catch","error","console","log","controlName","test","alertType","alertContentMsg","autoHideDuration","_objectSpread","handleToggle","e","field","validateRegex","inputBoxId","passValue","selectionEnd","selectionStart","slice","join","stringArray","split","splice","apply","concat","_toConsumableArray","which","code","regexValidator","preventDefault","alertContentKey","_props$selectedContro","_props$selectedContro2","_props$selectedContro3","_props$selectedContro4","_props$selectedContro5","_window3","_window3$appformBuild","toLowerCase","_jsxs","className","styles","parentDiv","display","children","leftLabel","label","RightTextBox","defaultValue","RightLabelTextBox","onKeyPress","onKeyUp","onBlur","RightTextboxPlaceholderArabic","RightTextboxPlaceholder","Form","Group","parentDivTopBottom","topBottomLabel","fullWidthTextBox","toggleCheckboxArabic","toggleCheckbox","ToggleBtn","toggleState","_Fragment","RightLabelSelectForText","onChange","map","optionTagData","optionCount","Value","_ControlsMap$key$chil","_ControlsMap$key$chil2","selected","Title","leftLabelForTextBox","checkBoxLayoutStyletextAreaURL","SurveyURL","labelForLabel","maxLength","label_max_length","textBoxLayoutForLable","inputBoxErrorStyle","ErrorMessageComponent","errorMessage","checkBoxLayoutStyletextArea","json","EventListjson","elemtype","elem_type","ControlLabel","handleDelete","customId","Card","Body","cardBodySheetProperties","item","CustomizedAlert"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,GAAM,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAE,CACLC,KAAK,CAAE,EAAE,CACT;AACAC,QAAQ,CAAC,EAAE,CACX;AACAC,OAAO,CAAE,EAAE,CACXC,cAAc,CAAE,EAAE,CAClBC,SAAS,CAAE,EAAE,CACb;AACAC,MAAM,CAAE,EAAE,CACVC,kBAAkB,CAAE,EACtB,CAAC,CACDC,OAAO,CAAE,CACPC,aAAa,CAAE,EAAE,CACjBC,WAAW,CAAE,EACf,CAAC,CACDC,OAAO,CAAE,CACPC,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,UAAU,CAAE,EAAE,CACdC,aAAa,CAAE,EACjB,CACA;AACA;AACA;AACF,CAAC,CAEchB,oEAAU,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZzB,GAAM,CAAAiB,iCAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,KAAK,CAAK,KAAAC,OAAA,CAAAC,qBAAA,CAAAC,QAAA,CAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAClC,GAAM,CAAAC,kBAAkB,CAAC,EAAAN,OAAA,CAAAO,MAAM,UAAAP,OAAA,kBAAAC,qBAAA,CAAND,OAAA,CAAQQ,sBAAsB,UAAAP,qBAAA,iBAA9BA,qBAAA,CAAgCQ,gBAAgB,IAAK,IAAI,EAAI,EAAAP,QAAA,CAAAK,MAAM,UAAAL,QAAA,kBAAAC,qBAAA,CAAND,QAAA,CAAQM,sBAAsB,UAAAL,qBAAA,iBAA9BA,qBAAA,CAAgCM,gBAAgB,IAAK,OAAO,CAClJ,GAAM,CAAAC,QAAQ,CAAGC,+CAAgB,CAACZ,KAAK,CAACa,WAAW,CAAC,CAEpD,IAAAC,kBAAA,CAAiKH,QAAQ,CAACA,QAAQ,CAA3KI,UAAU,CAAAD,kBAAA,CAAVC,UAAU,CAAEC,mBAAmB,CAAAF,kBAAA,CAAnBE,mBAAmB,CAAEC,UAAU,CAAAH,kBAAA,CAAVG,UAAU,CAAEC,aAAa,CAAAJ,kBAAA,CAAbI,aAAa,CAACC,kBAAkB,CAAAL,kBAAA,CAAlBK,kBAAkB,CAACC,mBAAmB,CAAAN,kBAAA,CAAnBM,mBAAmB,CAACC,sBAAsB,CAAAP,kBAAA,CAAtBO,sBAAsB,CAAEC,6BAA6B,CAAAR,kBAAA,CAA7BQ,6BAA6B,CAC9J,GAAQ,CAAAC,2BAA2B,CAAwCR,UAAU,CAA7EQ,2BAA2B,CAAEC,mCAAmC,CAAGT,UAAU,CAAhDS,mCAAmC,CAExE,IAAAC,SAAA,CAAkCC,yBAAQ,CAAC,CACzCC,IAAI,CAAE,KAAK,CACXC,WAAW,CAAE,kBACf,CAAC,CAAC,CAAAC,UAAA,CAAAC,wCAAA,CAAAL,SAAA,IAHKM,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAI9B,IAAAI,UAAA,CAA4CP,yBAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAJ,wCAAA,CAAAG,UAAA,IAApDE,cAAc,CAAAD,UAAA,IAAEE,iBAAiB,CAAAF,UAAA,IACxC,IAAAG,eAAA,CAAcC,gDAAc,CAAC,CAAC,QAAQ,CAAE,aAAa,CAAC,CAAC,CAA/CC,CAAC,CAAAF,eAAA,CAADE,CAAC,CACT,GAAI,CAAAC,GAAG,CAAGxC,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,WAAW,CAAC,CAClD,GAAI1C,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,OAAO,CAAC,GAAKC,SAAS,CAAE,CACtD3C,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,WAAW,CAAC,CAAGF,GAAG,CAC9CxC,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,OAAO,CAAC,CAAG1C,KAAK,CAACyC,eAAe,CAACG,EAAE,CACjE,CAEA,GAAI,CAAAC,gBAAgB,CAAG,EAAE,CACzBC,MAAM,CAACC,IAAI,CAACjE,qBAAU,CAAC,CAACkE,OAAO,CAAC,SAACC,GAAG,CAAEC,KAAK,CAAK,CAC9C,GAAI,CAAAC,qBAAqB,CAAG,EAAE,CAC9BL,MAAM,CAACC,IAAI,CAACjE,qBAAU,CAACmE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC,SAACI,QAAQ,CAAK,CACjDD,qBAAqB,CAACE,IAAI,CACxBC,cAAc,CAACF,QAAQ,CAAEG,0CAAW,CAACH,QAAQ,CAAC,CAACI,IAAI,CAAC,CACrD,CACH,CAAC,CAAC,CACFX,gBAAgB,CAACQ,IAAI,cACnBI,0BAAA,CAACC,+BAAoB,EACnBd,EAAE,CAAEM,KAAK,CAAG,EAAG,CACfS,OAAO,CAAEV,GAAI,CACbW,IAAI,CAAET,qBAAsB,EAC5B,CACH,CACH,CAAC,CAAC,CAEF,QAAS,CAAAU,sBAAsBA,CAC7BC,iBAAiB,CACjBC,oBAAoB,CACpBC,eAAe,CACf,CACA,GAAI,CAAAC,MAAM,CAAGC,QAAQ,CAACC,cAAc,CAACL,iBAAiB,CAAGE,eAAe,CAAC,CACzE,GAAI,CAAAI,UAAU,CAAGH,MAAM,CAACI,OAAO,CAACJ,MAAM,CAACK,aAAa,CAAC,CAErD,GAAI,CAAAC,UAAU,CAAGvE,KAAK,CAACyC,eAAe,CAACC,KAAK,CAC5C6B,UAAU,CAACP,eAAe,CAAC,CAAGI,UAAU,CAACI,KAAK,CAC9CxE,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACsB,eAAe,CAAC,CAAGI,UAAU,CAACI,KAAK,CAC/DjD,2BAA2B,CACzBvB,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxB5C,KAAK,CAACyC,eAAe,CACtB,CACH,CACA,GAAM,CAAAgC,gBAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,SAAS,CAAK,CACvC,GAAI,CAAAC,KAAK,CAAG7B,MAAM,CAACC,IAAI,CAAC2B,SAAS,CAAC,CAACE,MAAM,CACzC,GAAGD,KAAK,CAAC,CAAC,CAAC,CACV,GAAI,CAAAE,MAAM,CAAG,CAAC,CAAC,CACfA,MAAM,CAAC,QAAQ,CAAC,CAAGH,SAAS,CAC5B1E,KAAK,CAACyC,eAAe,CAAC,OAAO,CAAC,CAAGoC,MAAM,CACxC,CACEtD,2BAA2B,CACzBvB,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxB5C,KAAK,CAACyC,eAAe,CACtB,CACJ,CAAC,CAEA,QAAS,CAAAqC,cAAcA,CAACC,YAAY,CAAEC,aAAa,CAAEC,KAAK,CAAE,CAC1D,GAAIF,YAAY,GAAK,UAAU,CAAE,CAC/B,GAAIC,aAAa,GAAKhF,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACzD,QAAQ,CAAE,CAC1D,GAAI,CAAAiG,OAAO,CAAGD,KAAK,CAACE,MAAM,CAC1B,GAAI,CAAAC,UAAU,CAAG,CACfC,eAAe,CAAEL,aAAa,CAC9BM,SAAS,CAAEtF,KAAK,CAACyC,eAAe,CAACG,EACnC,CAAC,CACD2C,uDAAuB,CAACH,UAAU,CAAC,CAChCI,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,GAAIA,QAAQ,EAAIA,QAAQ,CAACC,IAAI,EAAID,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAK,GAAG,CAAE,CAC7D,GAAI,CAAAC,WAAW,CAAGC,2CAAY,CAC5B7F,KAAK,CAACyC,eAAe,CAAE;AACvBuC,aAAc;AAAA,CACf,CACD,GAAIY,WAAW,CAAE,CACfrE,2BAA2B,CACzBvB,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxBgD,WAAW,CACZ,CACH,CACF,CAAC,IAAM,IACLH,QAAQ,EACRA,QAAQ,CAACC,IAAI,EACbD,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAK,IAAI,CAC7B,CACArE,6BAA6B,CAAC,CAC5B,MAAM,CAAC,IAAI,CACX,aAAa,CAAC,kBAAkB,CAChC,WAAW,CAAC,OAAO,CACnB,iBAAiB,CAAC,gCACpB,CAAC,CAAC,CACF4D,OAAO,CAACV,KAAK,CAAGxE,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACzD,QAAQ,EAAI,EAAE,CAC5D,CACF,CAAC,CAAC,CACD6G,KAAK,CAAC,SAAUC,KAAK,CAAE,CACtB;AACAb,OAAO,CAACV,KAAK,CAAGxE,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACzD,QAAQ,EAAI,EAAE,CAC1D+G,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAGF,KAAK,CAAC,CAC3C,CAAC,CAAC,CACN,CAEF,CAAC,IAAM,IAAGhB,YAAY,GAAK,WAAW,CAAC,CACrC;AACA,GAAG/E,KAAK,CAACyC,eAAe,CAACyD,WAAW,GAAK,QAAQ,CAAC,CAChDlG,KAAK,CAACyC,eAAe,CAAC,WAAW,CAAC,CAAGuC,aAAa,CACpD,CACA,GAAGhF,KAAK,CAACyC,eAAe,CAACyD,WAAW,GAAK,QAAQ,CAAC,CAChD,GAAI,yVAAyV,CAACC,IAAI,CAACnB,aAAa,CAAC,CAAC,CAChXhF,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,WAAW,CAAC,CAAGsC,aAAa,CAC1D,CAAC,IACI,IAAGA,aAAa,GAAK,EAAE,EAAIA,aAAa,GAAK,IAAI,CAAE,CACtDhF,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,WAAW,CAAC,CAAGsC,aAAa,CAC1D,CAAC,IACG,CACFhD,YAAY,CAAC,CACXL,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,kBAAkB,CAC/BwE,SAAS,CAAE,OAAO,CAClBC,eAAe,CAAE,8CAA8C,CAC/DC,gBAAgB,CAAE,IACpB,CAAC,CAAC,CACJ,CACF,CACA/E,2BAA2B,CACzBvB,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAA2D,wCAAA,IACpBvG,KAAK,CAACyC,eAAe,EAC1B,CACH,CAAC,IAAM,CACL,GAAI,CAAA8B,UAAU,CAAGvE,KAAK,CAACyC,eAAe,CAACC,KAAK,CAC5C6B,UAAU,CAACQ,YAAY,CAAC,CAAGC,aAAa,CACxChF,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACqC,YAAY,CAAC,CAAGC,aAAa,CACzDzD,2BAA2B,CACzBvB,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxB5C,KAAK,CAACyC,eAAe,CACtB,CACH,CACF,CAEA,QAAS,CAAA+D,YAAYA,CAACC,CAAC,CAAEC,KAAK,CAAE,CAC9B,GAAM,CAAAlC,KAAK,CAAGiC,CAAC,CAACtB,MAAM,CAACX,KAAK,CAC5BxE,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACgE,KAAK,CAAC,CAAGlC,KAAK,CAAC,EAAE,CAC7C,GAAGkC,KAAK,GAAK,QAAQ,CAAE,CACrB1G,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,gBAAgB,CAAC,CAAG8B,KAAK,CACvD,CACA,GAAGkC,KAAK,GAAK,eAAe,CAAE,CAC5B1G,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,kBAAkB,CAAC,CAAG8B,KAAK,CACzD,CACA,GAAGkC,KAAK,GAAK,UAAU,CAAE,CACvB1G,KAAK,CAACyC,eAAe,CAACC,KAAK,CAAC,uBAAuB,CAAC,CAAG8B,KAAK,CAC9D,CACAjD,2BAA2B,CACzBvB,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxB5C,KAAK,CAACyC,eAAe,CACtB,CACH,CAGA,QAAS,CAAAkE,aAAaA,CAAC5B,YAAY,CAAEC,aAAa,CAAEC,KAAK,CAAE2B,UAAU,CAAE,CACrE,GAAI,CACF,GAAI,CAAAC,SAAS,CAAC5B,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEhC,GAAG,CACxB,GAAG8B,YAAY,GAAG,UAAU,CAAC,CAC3B,GAAGE,KAAK,CAACE,MAAM,CAAC2B,YAAY,GAAK7B,KAAK,CAACE,MAAM,CAAC4B,cAAc,CAAC,CAC3DF,SAAS,CAAC,CAAC7B,aAAa,CAACgC,KAAK,CAAC,CAAC,CAAC/B,KAAK,CAACE,MAAM,CAAC2B,YAAY,CAAC,CAAC7B,KAAK,CAAChC,GAAG,CAAG+B,aAAa,CAACgC,KAAK,CAAC/B,KAAK,CAACE,MAAM,CAAC2B,YAAY,CAAC,CAAE,CAACG,IAAI,CAAC,EAAE,CAAC,CACnI,CAAC,IACI,CACH,GAAI,CAAAC,WAAW,CAAGlC,aAAa,CAACmC,KAAK,CAAC,EAAE,CAAC,CACzCD,WAAW,CAACE,MAAM,CAACnC,KAAK,CAACE,MAAM,CAAC4B,cAAc,CAAE9B,KAAK,CAACE,MAAM,CAAC2B,YAAY,CAAG7B,KAAK,CAACE,MAAM,CAAC4B,cAAc,CAAC,CACxGG,WAAW,CAACE,MAAM,CAAAC,KAAA,CAAlBH,WAAW,EAAQjC,KAAK,CAACE,MAAM,CAAC4B,cAAc,CAAE,CAAC,EAAAO,MAAA,CAAAC,4CAAA,CAAKtC,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEhC,GAAG,CAACkE,KAAK,CAAC,EAAE,CAAC,GAAC,CAC3EN,SAAS,CAAGK,WAAW,CAACD,IAAI,CAAC,EAAE,CAAC,CAClC,CACF,CACA,GACEhC,KAAK,EACLA,KAAK,CAACuC,KAAK,GAAK,CAAC,EACjBvC,KAAK,CAACuC,KAAK,GAAK,EAAE,EAClBvC,KAAK,CAACwC,IAAI,GAAK,KAAK,EACpB,CAACC,iDAAc,CACbb,SAAS,CACTtD,0CAAW,CAACwB,YAAY,CAAC,CAAC,WAAW,CAAC,CACvC,CACD,CACAE,KAAK,CAAC0C,cAAc,EAAE,CACtB3F,YAAY,CAAAuE,wCAAA,CAAAA,wCAAA,IACPhD,0CAAW,CAAC,iCAAiC,CAAC,MACjD5B,IAAI,CAAE,IAAI,CACViG,eAAe,CAAE,mBAAmB,GACpC,CACJ,CAAC,IAAM,CACL5F,YAAY,CAAC,CACXJ,WAAW,CAAE,kBAAkB,CAC/BD,IAAI,CAAE,KACR,CAAC,CAAC,CACFS,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CACF,CAAE,MAAOqE,CAAC,CAAE,CACTT,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC9C,CACF,CAEA,QAAS,CAAA3C,cAAcA,CAACL,GAAG,CAAEO,IAAI,CAAE,KAAAqE,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,QAAA,CAAAC,qBAAA,CACjC,OAAQ3E,IAAI,CAAC4E,WAAW,EAAE,EACxB,IAAK,MAAM,CACT,mBACEC,2BAAA,QAAKC,SAAS,CAAEC,8BAAM,CAACC,SAAU,CAAC9F,KAAK,CAAEnC,kBAAkB,CAAC,CAACkI,OAAO,CAAC,MAAM,CAAC,CAAC,IAAK,CAAAC,QAAA,eAChFjF,0BAAA,SAAM6E,SAAS,CAAEC,8BAAM,CAACI,SAAU,CAAAD,QAAA,CAAEnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,EAAQ,cACtFP,2BAAA,QAAKC,SAAS,CAAEC,8BAAM,CAACM,YAAa,CAAAH,QAAA,eAClCjF,0BAAA,UACED,IAAI,CAAC,MAAM,CACX,aAAY,gBAAiB,CAC7BsF,YAAY,CAAE9I,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAE/CqF,SAAS,CAAEC,8BAAM,CAACQ,iBAAkB,CACpCC,UAAU,CAAE,SAAAA,WAAC/D,KAAK,QAChB,CAAA0B,aAAa,CACX1D,GAAG,CACHgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAClBS,KAAK,CACLjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAGK,GAAG,CAC/B,EACF,CACDgG,OAAO,CAAE,SAAAA,QAAChE,KAAK,QACb,CAAA0B,aAAa,CACX1D,GAAG,CACHgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAClBS,KAAK,CACLjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAGK,GAAG,CAC/B,EACF,CACDiG,MAAM,CAAE,SAAAA,OAACjE,KAAK,QACZ,CAAAH,cAAc,CAAC7B,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAAES,KAAK,CAAC,EAC/C,EApBIjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAqB7B,CACDK,GAAG,GAAK,UAAU,cACjBQ,0BAAA,QAAK6E,SAAS,CAAE/H,kBAAkB,CAAGgI,8BAAM,CAACY,6BAA6B,CAAGZ,8BAAM,CAACa,uBAAwB,CAAAV,QAAA,CAAC,IAAE,EAAM,CAClH,IAAI,GACJ,GACF,CAGV,IAAK,iBAAiB,CACpB,mBACEL,2BAAA,CAACgB,uBAAI,CAACC,KAAK,EAAChB,SAAS,CAAEC,8BAAM,CAACgB,kBAAmB,CAAAb,QAAA,eAC/CjF,0BAAA,QAAAiF,QAAA,cACEjF,0BAAA,SAAM6E,SAAS,CAAEC,8BAAM,CAACiB,cAAe,CAAAd,QAAA,CACpCnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,EACtC,EACH,cACNnF,0BAAA,QAAAiF,QAAA,cACEjF,0BAAA,UACED,IAAI,CAAC,MAAM,CACX,aAAY,gBAAiB,CAC7BsF,YAAY,CAAE9I,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAE/CqF,SAAS,CAAEC,8BAAM,CAACkB,gBAAiB,CACnCT,UAAU,CAAE,SAAAA,WAAC/D,KAAK,QAAK,CAAA0B,aAAa,CAAC1D,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAAES,KAAK,CAAEjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAGK,GAAG,CAAC,EAAC,CACrGiG,MAAM,CAAE,SAAAA,OAACjE,KAAK,QAAK,CAAAH,cAAc,CAAC7B,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAAES,KAAK,CAAC,EAAC,EAH7DjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAI7B,EACE,GACK,CAGjB,IAAK,QAAQ,CACX,mBACEyF,2BAAA,QAAKC,SAAS,CAAEC,8BAAM,CAACC,SAAU,CAAC9F,KAAK,CAAEnC,kBAAkB,CAAC,CAACkI,OAAO,CAAC,MAAM,CAAC,CAAC,IAAK,CAAAC,QAAA,eAChFjF,0BAAA,SAAM6E,SAAS,CAAEC,8BAAM,CAACI,SAAU,CAAAD,QAAA,CAAEnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,EAAQ,cACtFnF,0BAAA,QAAK6E,SAAS,CAAE/H,kBAAkB,CAAGgI,8BAAM,CAACmB,oBAAoB,CAAGnB,8BAAM,CAACoB,cAAe,CAAAjB,QAAA,cACvFjF,0BAAA,CAACmG,4BAAS,EAKRhH,EAAE,CAAE5C,KAAK,SAALA,KAAK,YAAA6H,qBAAA,CAAL7H,KAAK,CAAEyC,eAAe,UAAAoF,qBAAA,YAAAC,sBAAA,CAAtBD,qBAAA,CAAwBnF,KAAK,UAAAoF,sBAAA,WAA7BA,sBAAA,CAA+B7I,QAAQ,CAAGe,KAAK,SAALA,KAAK,kBAAA+H,sBAAA,CAAL/H,KAAK,CAAEyC,eAAe,UAAAsF,sBAAA,kBAAAC,sBAAA,CAAtBD,sBAAA,CAAwBrF,KAAK,UAAAsF,sBAAA,iBAA7BA,sBAAA,CAA+B/I,QAAQ,CAAGe,KAAK,SAALA,KAAK,kBAAAiI,sBAAA,CAALjI,KAAK,CAAEyC,eAAe,UAAAwF,sBAAA,iBAAtBA,sBAAA,CAAwBrF,EAAG,CACnHiH,WAAW,CAAE7J,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAC9CuD,YAAY,CAAEA,YAAa,CAC3BE,KAAK,CAAEzD,GAAI,EANTjD,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxB5C,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAC,CAMlC,EACE,GACF,CAGV,IAAK,OAAO,CACV,mBACEQ,0BAAA,CAAAqG,uBAAA,EAAApB,QAAA,cACEL,2BAAA,QAAKC,SAAS,CAAEC,8BAAM,CAACC,SAAU,CAAC9F,KAAK,CAAEnC,kBAAkB,CAAC,CAACkI,OAAO,CAAC,MAAM,CAAC,CAAC,IAAK,CAAAC,QAAA,eAChFjF,0BAAA,SAAM6E,SAAS,CAAEC,8BAAM,CAACI,SAAU,CAAAD,QAAA,CAAEnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,EAAQ,cACtFnF,0BAAA,QAAK6E,SAAS,CAAEC,8BAAM,CAACwB,uBAAwB,CAAArB,QAAA,cAC7CjF,0BAAA,WACEb,EAAE,CAAE5C,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAGK,GAAI,CACnCqF,SAAS,CAAEC,8BAAM,CAACwB,uBAAwB,CAE1CC,QAAQ,CAAE,SAAAA,SAAA,QACR,CAAAnG,sBAAsB,CACpB7D,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxBW,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,CACtB3F,GAAG,CACJ,EACF,CAAAyF,QAAA,CAEAnF,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACuB,GAAG,CAC5B,SAACC,aAAa,CAAEC,WAAW,CAAK,CAC9B,GAAI5G,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACC,KAAK,EAAI7G,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACC,KAAK,GAAK,EAAE,EAAI7G,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACC,KAAK,GAAK,QAAQ,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CACpK,mBACE7G,0BAAA,CAAAqG,uBAAA,EAAApB,QAAA,CACGnF,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACC,KAAK,GAC7CpK,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAC,cAC9BQ,0BAAA,WACEf,KAAK,EAAA2H,qBAAA,CAAE9G,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,UAAAE,qBAAA,iBAAtCA,qBAAA,CAAwC3H,KAAM,CACrD8B,KAAK,CACHjB,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACC,KACxC,CACDG,QAAQ,MAAA7B,QAAA,CAEPnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACK,KAAK,EAAG,EAE1D,cAET/G,0BAAA,WACEf,KAAK,EAAA4H,sBAAA,CAAE/G,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,UAAAG,sBAAA,iBAAtCA,sBAAA,CAAwC5H,KAAM,CACrD8B,KAAK,CACHjB,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACC,KACxC,CAAA1B,QAAA,CAEAnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAACyF,QAAQ,CAACyB,WAAW,CAAC,CAACK,KAAK,EAAG,EAEpE,EACA,CAEP,CACF,CAAC,CACF,EAxCIxK,KAAK,CAACyC,eAAe,CAACG,EAAE,CAyCtB,EACL,GACF,EACL,CAGP,IAAK,aAAa,CAClB,mBACEyF,2BAAA,QAAAK,QAAA,eACEjF,0BAAA,QAAK6E,SAAS,CAAEC,8BAAM,CAACkC,mBAAoB,CAAA/B,QAAA,cACzCjF,0BAAA,MAAAiF,QAAA,CAAInG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,EAAK,EAC/C,cACNnF,0BAAA,QAAAiF,QAAA,cACEjF,0BAAA,aACA,aAAYzD,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAC3CqF,SAAS,CAAEC,8BAAM,CAACmC,8BAA+B,CACjD5B,YAAY,CAAE9I,KAAK,CAACyC,eAAe,CAACyD,WAAW,GAAK,QAAQ,CAAGlG,KAAK,CAACyC,eAAe,CAACkI,SAAS,CAAG3K,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAElIiG,MAAM,CAAE,SAAAA,OAACjE,KAAK,QAAK,CAAAH,cAAc,CAAC7B,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAAC,EAAC,EADtDxE,KAAK,CAACyC,eAAe,CAACG,EAAE,CAEnB,EACN,GACJ,CAIN,IAAK,SAAS,CAChB,mBACEyF,2BAAA,QAAAK,QAAA,eACEL,2BAAA,QAAKC,SAAS,CAAEC,8BAAM,CAACkC,mBAAoB,CAAA/B,QAAA,eACzCL,2BAAA,QAAKC,SAAS,CAAEC,8BAAM,CAACqC,aAAc,CAAAlC,QAAA,EAAGnG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,CAAC,GAAC,GAAM,cAC1FnF,0BAAA,UACED,IAAI,CAAC,MAAM,CACX,aAAY,gBAAiB,CAC7BsF,YAAY,CAAE9I,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAK/C4H,SAAS,EAAA3C,QAAA,CAAE1H,MAAM,UAAA0H,QAAA,kBAAAC,qBAAA,CAAND,QAAA,CAAQzH,sBAAsB,UAAA0H,qBAAA,iBAA9BA,qBAAA,CAAgC2C,gBAAiB,CAC5DlI,EAAE,CAAE5C,KAAK,CAACyC,eAAe,CAACG,EAAE,CAACK,GAAI,CACjCqF,SAAS,CAAE,CAACC,8BAAM,CAACwC,qBAAqB,CAAE5I,cAAc,GAAMnC,KAAK,CAACyC,eAAe,CAACG,EAAE,CAACK,GAAI,CAAGsF,8BAAM,CAACyC,kBAAkB,CAAG,IAAI,CAAC,CAAC/D,IAAI,CAAC,GAAG,CAAE,CAC1I+B,UAAU,CAAE,SAAAA,WAAC/D,KAAK,QAAG,CAAA0B,aAAa,CAAC1D,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAACS,KAAK,CAACjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAACK,GAAG,CAAC,EAAC,CAC/FgG,OAAO,CAAE,SAAAA,QAAChE,KAAK,QAAG,CAAA0B,aAAa,CAAC1D,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAACS,KAAK,CAACjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CAACK,GAAG,CAAC,EAAC,CAC5FiG,MAAM,CAAE,SAAAA,OAACjE,KAAK,QAAG,CAAAH,cAAc,CAAC7B,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAAES,KAAK,CAAC,EAAC,EAR9DjF,KAAK,CAACyC,eAAe,CAACG,EAAE,CACxB5C,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAC,CAQlC,GACE,CACLd,cAAc,GAAKnC,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAGK,GAAG,cAChDQ,0BAAA,CAACwH,wCAAqB,EAACC,YAAY,CAAC,uBAAuB,EAAG,CAC5D,IAAI,GACJ,CAGR,IAAK,UAAU,CACb,mBACE7C,2BAAA,QAAAK,QAAA,eACEjF,0BAAA,QAAK6E,SAAS,CAAEC,8BAAM,CAACkC,mBAAoB,CAAA/B,QAAA,cACzCjF,0BAAA,MAAAiF,QAAA,CAAInG,CAAC,gBAAA+E,MAAA,CAAgB/D,0CAAW,CAACN,GAAG,CAAC,CAAC2F,KAAK,EAAG,EAAK,EAC/C,cACNnF,0BAAA,QAAAiF,QAAA,cACEjF,0BAAA,aACA,aAAYzD,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAC3CqF,SAAS,CAAEC,8BAAM,CAAC4C,2BAA4B,CAC9CrC,YAAY,CAAE9I,KAAK,CAACyC,eAAe,CAACC,KAAK,CAACO,GAAG,CAAE,CAE/CiG,MAAM,CAAE,SAAAA,OAACjE,KAAK,QAAK,CAAAH,cAAc,CAAC7B,GAAG,CAAEgC,KAAK,CAACE,MAAM,CAACX,KAAK,CAAC,EAAC,EADtDxE,KAAK,CAACyC,eAAe,CAACG,EAAE,CAEnB,EACR,GACF,CAEV,IAAK,aAAa,CAChB,mBACEa,0BAAA,CAACoB,yBAAM,EAEPuG,IAAI,CAAEC,kCAAc,CACpB7G,KAAK,CAAExE,KAAK,CAACyC,eAAe,CAACwC,KAAM,CACnCqG,QAAQ,CAAEtL,KAAK,CAACyC,eAAe,CAAC8I,SAAU,CAC1C9G,eAAe,CAAE,SAAAA,gBAACC,SAAS,QAAK,CAAAD,gBAAe,CAACC,SAAS,CAAC,EAAC,EAJtD1E,KAAK,CAACyC,eAAe,CAACG,EAAE,CAAG,iBAAiB,CAKvC,CAGZ,QAAS,MAAO,KAAI,CAAC,CAE3B,CAEA,mBACEyF,2BAAA,CAAAyB,uBAAA,EAAApB,QAAA,eACEjF,0BAAA,CAAC+H,+BAAY,EACX5C,KAAK,CAAE5I,KAAK,CAACyC,eAAe,CAAC,aAAa,CAAC,GAAK,QAAQ,CAAG,QAAQ,CAAG,QAAS,CAC/EgJ,YAAY,CAAEvK,aAAc,CAC5B0B,EAAE,CAAE5C,KAAK,CAACyC,eAAe,CAACG,EAAG,CAC7B8I,QAAQ,CAAI1L,KAAK,SAALA,KAAK,kBAAAK,sBAAA,CAALL,KAAK,CAAEyC,eAAe,UAAApC,sBAAA,kBAAAC,sBAAA,CAAtBD,sBAAA,CAAwBqC,KAAK,UAAApC,sBAAA,iBAA7BA,sBAAA,CAA+BrB,QAAS,EACpD,cACFwE,0BAAA,QAAK6E,SAAS,CAAC,gBAAgB,CAAAI,QAAA,cAC7BjF,0BAAA,CAACkI,uBAAI,CAACC,IAAI,EAACtD,SAAS,CAAEC,8BAAM,CAACsD,uBAAwB,CAAAnD,QAAA,CAClD7F,gBAAgB,CAACoH,GAAG,CAAC,SAAC6B,IAAI,CAAE5I,KAAK,CAAK,CACrC,MAAO,CAAA4I,IAAI,CACb,CAAC,CAAC,EACQ,EACR,CAEJ/J,SAAS,CAACJ,IAAI,GAAK,IAAI,eACrB8B,0BAAA,CAACsI,kCAAe,EAAChK,SAAS,CAAEA,SAAU,EAAE,GAE3C,CAEP,CAAC,CAEchC,gKAAgB,E","file":"static/js/IFrameProperties.59d727a6c4dddc9ecd79.js","sourcesContent":["import React from \"react\";\r\n\r\nconst IFrameJson = {\r\n  Basic: {\r\n    Label: \"\",\r\n    // \"Mapping\" : \"\",\r\n    CustomId:'',\r\n    // UserDefinedControlID: \"\",\r\n    Visible: \"\",\r\n    FullScreenView: \"\",\r\n    SourceURL: \"\",\r\n    // \"Width\":\"\",\r\n    Height: \"\",\r\n    ControlDescription: \"\",\r\n  },\r\n  Display: {\r\n    MobileVisible: \"\", \r\n    TabsVisible: \"\",\r\n  },  \r\n  Spacing: {\r\n    SpacingLeft: \"\",\r\n    SpacingRight: \"\",\r\n    SpacingTop: \"\",\r\n    SpacingBottom: \"\",\r\n  },\r\n  // Events: {\r\n  //   EventButton: \"\",\r\n  // },\r\n};\r\n\r\nexport default IFrameJson;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../../../LeftNavigation/DesignerControls/BasicControls.module.css\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport ToggleBtn from \"../../../../ReusableComponents/ToggleBtn/ToggleBtn\";\r\nimport ControlsMap from \"../../../Properties/PropertiesConfiguration\";\r\nimport CollapsibleComponent from \"../../../../ReusableComponents/CollapseCard/CollapseCard\";\r\nimport IFrameJson from \"../../../Properties/IFrameJson\";\r\nimport ControlLabel from \"../../../../ReusableComponents/ControlLabel/ControlLabel\";\r\nimport { EventListjson } from \"../../../../ReusableComponents/Events/EventList\";\r\nimport Events from \"../../../../ReusableComponents/Events/Events\";\r\nimport { regexValidator } from \"../../../../Resources/globalFunctions\";\r\nimport { updateUserId } from \"../../Logic/UserIdLogic\";\r\nimport { validateCustomControlId } from \"../../RequestLogic\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport ErrorMessageComponent from '../../../../ReusableComponents/ErrorMessageComponent/ErrorMessageComponent';\r\nimport CustomizedAlert from \"../../../../ReusableComponents/Alert/CustomizedAlert\";\r\nimport { GetStateFromData } from \"../../../CustomHooks/CustomHooks\";\r\n\r\nconst IFrameProperties = (props) => {\r\n  const translationStyles1=window?.appformBuilder_configs?.selectedLanguage === \"ar\" || window?.appformBuilder_configs?.selectedLanguage === \"ar-SA\"; \r\n  const contexts = GetStateFromData(props.containerId);\r\n  \r\n  const {updateJson, changeSectionLayout, formState2, deleteControl,setQuickToolsClose,customControlIdList,setCustomControlIdList, showAlertConfirmNotifications }=contexts.contexts;\r\n  const { updatedComponentInFormState, removeAndUpdateComponentInFormState} =updateJson;\r\n\r\n  const [alertData, setAlertData] = useState({\r\n    open: false,\r\n    showConfirm: \"showNotification\",\r\n  });\r\n  const [errorMessageId, setErrorMessageId] = useState(false);\r\n  const { t } = useTranslation(['styles', 'translation']);\r\n  var src = props.selectedControl.style[\"SourceURL\"];\r\n  if (props.selectedControl.style[\"Label\"] === undefined) {\r\n    props.selectedControl.style[\"SourceURL\"] = src;\r\n    props.selectedControl.style[\"Label\"] = props.selectedControl.id;\r\n  }\r\n\r\n  var CollapsibleItems = [];\r\n  Object.keys(IFrameJson).forEach((key, index) => {\r\n    var collapseComponentBody = [];\r\n    Object.keys(IFrameJson[key]).forEach((property) => {\r\n      collapseComponentBody.push(\r\n        prepareHtmlTag(property, ControlsMap[property].type)\r\n      );\r\n    });\r\n    CollapsibleItems.push(\r\n      <CollapsibleComponent\r\n        id={index + \"\"}\r\n        heading={key}\r\n        body={collapseComponentBody}\r\n      />\r\n    );\r\n  });\r\n\r\n  function selectedOptionForLabel(\r\n    selectedControlId,\r\n    selectedControlLabel,\r\n    ControlLabelKey\r\n  ) {\r\n    var select = document.getElementById(selectedControlId + ControlLabelKey);\r\n    var option_tag = select.options[select.selectedIndex];\r\n\r\n    let temp_style = props.selectedControl.style;\r\n    temp_style[ControlLabelKey] = option_tag.value;\r\n    props.selectedControl.style[ControlLabelKey] = option_tag.value;\r\n    updatedComponentInFormState(\r\n      props.selectedControl.id,\r\n      props.selectedControl\r\n    );\r\n  }\r\n  const updateEventData = (eventJson) => {\r\n\t\tvar count = Object.keys(eventJson).length;\r\n\t\tif(count>0){\r\n\t\t\tvar Events = {};\r\n\t\t\tEvents[\"Events\"] = eventJson;\r\n\t\t\tprops.selectedControl[\"event\"] = Events;\r\n\t\t}\r\n    updatedComponentInFormState(\r\n      props.selectedControl.id,\r\n      props.selectedControl\r\n    );\r\n\t}\r\n\r\n  function handleProperty(propertyName, propertyValue, event) {\r\n    if (propertyName === \"CustomId\") {\r\n      if (propertyValue !== props.selectedControl.style.CustomId) {\r\n        var element = event.target;\r\n        var jsonToSend = {\r\n          customControlId: propertyValue,\r\n          controlid: props.selectedControl.id,\r\n        };\r\n        validateCustomControlId(jsonToSend)\r\n          .then((response) => {\r\n            if (response && response.data && response.data.status === \"0\") {\r\n              let updatedJson = updateUserId(\r\n                props.selectedControl, // whole control Json\r\n                propertyValue //newly defined id\r\n              );\r\n              if (updatedJson) {\r\n                updatedComponentInFormState(\r\n                  props.selectedControl.id,\r\n                  updatedJson\r\n                );\r\n              }\r\n            } else if (\r\n              response &&\r\n              response.data &&\r\n              response.data.status === \"-1\"\r\n            ) {\r\n              showAlertConfirmNotifications({\r\n                'open':true,\r\n                'showConfirm':'showNotification',\r\n                'alertType':'error',\r\n                'alertContentKey':\"CustomControl Id already Exist\"\r\n              });\r\n              element.value = props.selectedControl.style.CustomId || '';\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            element.value = props.selectedControl.style.CustomId || '';\r\n            console.log(\"Server side error \" + error);\r\n          });\r\n      }\r\n\r\n    } else if(propertyName === \"SourceURL\"){\r\n      // props.selectedControl[\"SurveyName\"] = propertyValue;\r\n      if(props.selectedControl.controlName === \"Survey\"){\r\n        props.selectedControl[\"SurveyURL\"] = propertyValue;\r\n      }\r\n      if(props.selectedControl.controlName === \"iframe\"){\r\n        if( /(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?\\/[a-zA-Z0-9]{2,}|((https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?)|(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}(\\.[a-zA-Z0-9]{2,})?/g.test(propertyValue)){\r\n          props.selectedControl.style[\"SourceURL\"] = propertyValue;\r\n        }\r\n        else if(propertyValue === \"\" || propertyValue === null) {\r\n          props.selectedControl.style[\"SourceURL\"] = propertyValue;\r\n        }\r\n        else{\r\n          setAlertData({\r\n            open: true,\r\n            showConfirm: \"showNotification\",\r\n            alertType: \"error\",\r\n            alertContentMsg: \"URL is invalid, Please enter the correct URL\",\r\n            autoHideDuration: 4000,\r\n          });\r\n        }\r\n      }\r\n      updatedComponentInFormState(\r\n        props.selectedControl.id,\r\n        {...props.selectedControl}\r\n      );\r\n    } else {\r\n      let temp_style = props.selectedControl.style;\r\n      temp_style[propertyName] = propertyValue;\r\n      props.selectedControl.style[propertyName] = propertyValue;\r\n      updatedComponentInFormState(\r\n        props.selectedControl.id,\r\n        props.selectedControl\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleToggle(e, field) {\r\n    const value = e.target.value;\r\n    props.selectedControl.style[field] = value+\"\";\r\n    if(field === \"Enable\") {\r\n      props.selectedControl.style[\"previousEnable\"] = value;\r\n    }\r\n    if(field === \"ReadOnlyStyle\") {\r\n      props.selectedControl.style[\"previousReadOnly\"] = value;\r\n    }\r\n    if(field === \"ReadOnly\") {\r\n      props.selectedControl.style[\"previousReadOnlyValue\"] = value;\r\n    }\r\n    updatedComponentInFormState(\r\n      props.selectedControl.id,\r\n      props.selectedControl\r\n    );\r\n  }\r\n  \r\n\r\n  function validateRegex(propertyName, propertyValue, event, inputBoxId) {\r\n    try {\r\n      let passValue=event?.key;\r\n      if(propertyName===\"CustomId\"){\r\n        if(event.target.selectionEnd === event.target.selectionStart){\r\n          passValue=[propertyValue.slice(0,event.target.selectionEnd)+event.key + propertyValue.slice(event.target.selectionEnd) ].join(\"\");\r\n        }\r\n        else {\r\n          let stringArray = propertyValue.split(\"\");\r\n          stringArray.splice(event.target.selectionStart, event.target.selectionEnd - event.target.selectionStart);\r\n          stringArray.splice(event.target.selectionStart, 0, ...event?.key.split(\"\"));\r\n          passValue = stringArray.join(\"\");\r\n        }\r\n      }\r\n      if (\r\n        event &&\r\n        event.which !== 8 &&\r\n        event.which !== 46 &&\r\n        event.code !== \"Tab\" &&\r\n        !regexValidator(\r\n          passValue,\r\n          ControlsMap[propertyName][\"regexType\"]\r\n        )\r\n      ) {\r\n        event.preventDefault();\r\n        setAlertData({\r\n          ...ControlsMap[\"customizedAlertNotificationData\"],\r\n          open: true,\r\n          alertContentKey: \"RegexErrorMessage\",\r\n        });\r\n      } else {\r\n        setAlertData({\r\n          showConfirm: \"showNotification\",\r\n          open: false,          \r\n        });\r\n        setErrorMessageId(false);\r\n      }\r\n    } catch (e) {\r\n       console.log(\"Error while validating regex\");\r\n    }\r\n  }\r\n\r\n  function prepareHtmlTag(key, type) {\r\n    switch (type.toLowerCase()) {\r\n      case \"text\":\r\n        return (\r\n          <div className={styles.parentDiv} style={translationStyles1?{display:\"flex\"}:null}>\r\n            <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n            <div className={styles.RightTextBox}>\r\n              <input\r\n                type=\"text\"\r\n                aria-label={\"Control Value1\"} \r\n                defaultValue={props.selectedControl.style[key]}\r\n                key={props.selectedControl.id}\r\n                className={styles.RightLabelTextBox}\r\n                onKeyPress={(event) =>\r\n                  validateRegex(\r\n                    key,\r\n                    event.target.value,\r\n                    event,\r\n                    props.selectedControl.id + key\r\n                  )\r\n                }\r\n                onKeyUp={(event) =>\r\n                  validateRegex(\r\n                    key,\r\n                    event.target.value,\r\n                    event,\r\n                    props.selectedControl.id + key\r\n                  )\r\n                }\r\n                onBlur={(event) =>\r\n                  handleProperty(key, event.target.value, event)\r\n                }\r\n              />\r\n              {key !== \"CustomId\" ? (\r\n                <div className={translationStyles1 ? styles.RightTextboxPlaceholderArabic : styles.RightTextboxPlaceholder}>px</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"text_top_bottom\":\r\n        return (\r\n          <Form.Group className={styles.parentDivTopBottom}>\r\n            <div>\r\n              <span className={styles.topBottomLabel}>\r\n                {t(`translation:${ControlsMap[key].label}`)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                aria-label={\"Control Value2\"}\r\n                defaultValue={props.selectedControl.style[key]}\r\n                key={props.selectedControl.id}\r\n                className={styles.fullWidthTextBox}\r\n                onKeyPress={(event) => validateRegex(key, event.target.value, event, props.selectedControl.id + key)}\r\n                onBlur={(event) => handleProperty(key, event.target.value, event)}\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n        );\r\n\r\n      case \"toggle\":\r\n        return (\r\n          <div className={styles.parentDiv} style={translationStyles1?{display:\"flex\"}:null}>\r\n            <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n            <div className={translationStyles1 ? styles.toggleCheckboxArabic : styles.toggleCheckbox}>\r\n              <ToggleBtn\r\n                key={\r\n                  props.selectedControl.id +\r\n                  props.selectedControl.style[key]\r\n                }\r\n                id={props?.selectedControl?.style?.CustomId ? props?.selectedControl?.style?.CustomId : props?.selectedControl?.id}\r\n                toggleState={props.selectedControl.style[key]}\r\n                handleToggle={handleToggle}\r\n                field={key}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"combo\":\r\n        return (\r\n          <>\r\n            <div className={styles.parentDiv} style={translationStyles1?{display:\"flex\"}:null}>\r\n              <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n              <div className={styles.RightLabelSelectForText}>\r\n                <select\r\n                  id={props.selectedControl.id + key}\r\n                  className={styles.RightLabelSelectForText}\r\n                  key={props.selectedControl.id}\r\n                  onChange={() =>\r\n                    selectedOptionForLabel(\r\n                      props.selectedControl.id,\r\n                      ControlsMap[key].label,\r\n                      key\r\n                    )\r\n                  }\r\n                  >\r\n                  {ControlsMap[key].children.map(\r\n                    (optionTagData, optionCount) => {\r\n                      if (ControlsMap[key].children[optionCount].Value || ControlsMap[key].children[optionCount].Value === \"\" || ControlsMap[key].children[optionCount].Value === \"Select\") {\r\n                        return (\r\n                          <>\r\n                            {ControlsMap[key].children[optionCount].Value ===\r\n                            props.selectedControl.style[key] ? (\r\n                              <option\r\n                                style={ControlsMap[key].children[optionCount]?.style}\r\n                                value={\r\n                                  ControlsMap[key].children[optionCount].Value\r\n                                }\r\n                                selected\r\n                              >\r\n                                {t(`translation:${ControlsMap[key].children[optionCount].Title}`)}\r\n                                \r\n                              </option>\r\n                            ) : (\r\n                              <option\r\n                                style={ControlsMap[key].children[optionCount]?.style}\r\n                                value={\r\n                                  ControlsMap[key].children[optionCount].Value\r\n                                }\r\n                              >\r\n                                {t(`translation:${ControlsMap[key].children[optionCount].Title}`)}                                \r\n                              </option>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    }\r\n                  )}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"textareaurl\":\r\n      return (\r\n        <div>\r\n          <div className={styles.leftLabelForTextBox}>\r\n            <p>{t(`translation:${ControlsMap[key].label}`)}</p>\r\n          </div>\r\n          <div>\r\n            <textarea\r\n            aria-label={props.selectedControl.style[key]}\r\n              className={styles.checkBoxLayoutStyletextAreaURL}\r\n              defaultValue={props.selectedControl.controlName === \"Survey\" ? props.selectedControl.SurveyURL : props.selectedControl.style[key]}\r\n              key={props.selectedControl.id}\r\n              onBlur={(event) => handleProperty(key, event.target.value)}\r\n            ></textarea>\r\n            </div>\r\n        </div>\r\n        \r\n      );\r\n\r\n        case \"textbox\":\r\n      return (\r\n        <div>\r\n          <div className={styles.leftLabelForTextBox}>\r\n            <div className={styles.labelForLabel} >{t(`translation:${ControlsMap[key].label}`)} </div>\r\n            <input \r\n              type=\"text\"  \r\n              aria-label={\"Control Value3\"}\r\n              defaultValue={props.selectedControl.style[key]} \r\n              key={\r\n                props.selectedControl.id +\r\n                props.selectedControl.style[key]\r\n              }\r\n              maxLength={window?.appformBuilder_configs?.label_max_length}\r\n              id={props.selectedControl.id+key}\r\n              className={[styles.textBoxLayoutForLable, errorMessageId === (props.selectedControl.id+key) ? styles.inputBoxErrorStyle : null].join(\" \")}\r\n              onKeyPress={(event)=>validateRegex(key, event.target.value,event,props.selectedControl.id+key)}\r\n              onKeyUp={(event)=>validateRegex(key, event.target.value,event,props.selectedControl.id+key)}\r\n              onBlur={(event)=>handleProperty(key, event.target.value, event)}\r\n            />\r\n          </div>\r\n          {errorMessageId === props.selectedControl.id + key ? (\r\n            <ErrorMessageComponent errorMessage=\"non-permissible value\" />\r\n          ) : null}\r\n        </div>\r\n      );\r\n\r\n      case \"textarea\":\r\n        return (\r\n          <div>\r\n            <div className={styles.leftLabelForTextBox}>\r\n              <p>{t(`translation:${ControlsMap[key].label}`)}</p>\r\n            </div>\r\n            <div>\r\n              <textarea\r\n              aria-label={props.selectedControl.style[key]}\r\n                className={styles.checkBoxLayoutStyletextArea}\r\n                defaultValue={props.selectedControl.style[key]}\r\n                key={props.selectedControl.id}\r\n                onBlur={(event) => handleProperty(key, event.target.value)}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        );\r\n      case \"eventbutton\":\r\n        return (\r\n          <Events\r\n          key={props.selectedControl.id + \"_eventsProperty\"}\r\n          json={EventListjson}\r\n          value={props.selectedControl.event}\r\n          elemtype={props.selectedControl.elem_type}\r\n          updateEventData={(eventJson) => updateEventData(eventJson)}\r\n          ></Events>\r\n        );\r\n\r\n        default: return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ControlLabel\r\n        label={props.selectedControl[\"controlName\"] === \"Survey\" ? \"Survey\" : \"Iframe\"}\r\n        handleDelete={deleteControl}\r\n        id={props.selectedControl.id}\r\n        customId = {props?.selectedControl?.style?.CustomId}\r\n      />\r\n      <div className=\"propertiesBody\">\r\n        <Card.Body className={styles.cardBodySheetProperties}>\r\n          {CollapsibleItems.map((item, index) => {\r\n            return item;\r\n          })}\r\n        </Card.Body>\r\n      </div>\r\n      {\r\n        alertData.open === true &&\r\n          <CustomizedAlert alertData={alertData}/>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IFrameProperties;\r\n"],"sourceRoot":""}