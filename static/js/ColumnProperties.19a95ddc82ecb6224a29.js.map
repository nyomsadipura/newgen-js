{"version":3,"sources":["UI/BasicFormControls/Slider/Slider.js","components/Properties/COLPropertiesJson.jsx","components/IFormDesignerLayout/IFormDesignerComponents/ColumnProperties/ColumnProperties.jsx"],"names":["useStyles","makeStyles","theme","sliderRoot","width","marginLeft","marginBottom","height","backgroundColor","border","display","left","fontSize","DiscreteSlider","props","_selectedControl$styl","classes","selectedControl","selectKey","min","max","step","defaultValue","marks","_useState","useState","style","_useState2","_slicedToArray","val","setVal","contexts","GetStateFromData","containerId","_contexts$contexts","updateJson","device","updatedComponentInFormState","useEffect","_selectedControl$styl2","isObjectEmpty","JSON","stringify","handleChange","event","value","handleMouseUp","id","_jsx","className","root","children","Slider","valueLabelDisplay","onChange","onClick","COLPropertiesJson","w","slider","label","field","heightselect","colheight","sm","slider3","xs","slider4","colPadding","ColumnProperties","_window","_window$appformBuilde","_window2","_window2$appformBuild","_props$selectedContro","_props$selectedContro2","translationStyles1","window","depsatkur_configs","selectedLanguage","_useTranslation","useTranslation","t","changeSectionLayout","formState2","deleteControl","setQuickToolsClose","customControlIdList","setCustomControlIdList","currentDevice","getElementJson","showAlertConfirmNotifications","removeAndUpdateComponentInFormState","errorMessageId","setErrorMessageId","_useState3","open","showConfirm","_useState4","alertData","setAlertData","globalTheme","undefined","CollapsibleItems","Object","keys","forEach","key","index","collapseComponentBody","property","fetchedProperty","replace","push","prepareHtmlTag","ControlsMap","type","CollapsibleComponent","heading","body","handleProperty","propertyName","propertyValue","includes","document","getElementById","offsetHeight","colheight1","parentRow","currentTarget","closest","temp_style","_props$selectedContro3","CustomId","element","target","console","log","jsonToSend","customControlId","controlid","validateCustomControlId","then","response","data","status","updatedJson","updateUserId","catch","error","e","validateRegex","inputBoxId","which","code","regexValidator","String","fromCharCode","preventDefault","_objectSpread","alertContentKey","selectedOptionForLabel","selectedControlId","selectedControlLabel","ControlLabelKey","select","option_tag","options","selectedIndex","parseInt","handleToggle","_props$selectedContro4","_props$selectedContro5","_props$selectedContro6","_props$selectedContro7","_props$selectedContro8","_props$selectedContro9","_props$selectedContro10","_props$selectedContro11","toLowerCase","styles","propertiesHeaderColumn","concat","_jsxs","ToggleBtn","toggleState","_Fragment","parentDiv","leftLabel","ColumnSelectForText1","ColumnSelectForText2","map","optionTagData","optionCount","Value","_ControlsMap$key$chil","_ControlsMap$key$chil2","selected","Title","font","letterSpacing","color","opacity","ActiveIcon","activeStyle","padding","borderRadius","background","margin","inActiveStyle","passedValue","handleStyleType","RightTextBox","RightLabelTextBox","inputBoxErrorStyle","join","onBlur","ErrorMessageComponent","errorMessage","ControlLabel","handleDelete","Card","Body","cardBodySheetProperties","item","CustomizedAlert"],"mappings":"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","file":"static/js/ColumnProperties.19a95ddc82ecb6224a29.js","sourcesContent":["import {React, useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nimport {AppContext} from '../../../Resources/CanvasContextFile';\r\nimport {useSelector} from \"../../../Redux\"\r\nimport { isObjectEmpty } from '../../../Resources/globalFunctions';\r\nimport { GetStateFromData } from '../../../components/CustomHooks/CustomHooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   width: 250,\r\n  // },\r\n  // margin: {\r\n  //   height: theme.spacing(3),\r\n  // },\r\n  sliderRoot: {\r\n    width: \"245px\",\r\n    marginLeft: \"4px\",\r\n    marginBottom: \"15px\",\r\n    '& .MuiSlider-track':{\r\n      height:\"4px\",\r\n      backgroundColor: \"#0072C6\", \r\n    },\r\n    '& .MuiSlider-rail':{\r\n      height:\"4px\"\r\n    }, \r\n    '& .MuiSlider-thumb':{\r\n      height:\"13px\",\r\n      width:\"13px\",\r\n      backgroundColor:\"#0072C6\",\r\n      border: \"2px solid #0072C6\",\r\n    },\r\n    '& .MuiSlider-mark MuiSlider-markActive':{\r\n    },\r\n    '& .MuiSlider-mark':{\r\n      backgroundColor:\"#ffffff\",\r\n      display: \"none\"\r\n    },\r\n    '& .MuiSlider-markLabel MuiSlider-markLabelActive':{\r\n      left:\"19% !important\"\r\n    },\r\n    '& .MuiSlider-markLabel':{\r\n      left:\"95%\"\r\n    },\r\n    '& .MuiInput-underline:before':{\r\n      width:\"35px\",\r\n      height:\"2px\",\r\n      // marginBottom:\"-10px\"\r\n    },\r\n    '& .MuiInput-underline:after':{\r\n      width:\"35px\",\r\n      height:\"2px\",\r\n      // marginBottom:\"-10px\"\r\n    },\r\n    '& .MuiInputBase-input':{\r\n      width:\"38px\",\r\n      height:\"8px\",\r\n      fontSize:\"12px\",\r\n      marginBottom:\"-5px\",\r\n      marginLeft:\"3px\"\r\n    } \r\n  }\r\n}));\r\n\r\nexport default function DiscreteSlider(props) {\r\n  \r\n  const classes = useStyles();\r\n  const {selectedControl, selectKey, min, max, step, defaultValue, marks} = props;\r\n  const [val,setVal] = useState(    selectKey === \"w\" || selectKey === \"md\" || selectKey === \"sm\" || selectKey === \"xs\" ? selectedControl?.[selectKey] : selectedControl?.style?.[selectKey]\r\n  );\r\n\r\n\r\n  // const contexts = useSelector(\r\n  //   state=>({\r\n  //       contexts:state.contexts\r\n  //   })\r\n  // );\r\n  // const { updateJson} = useContext(AppContext);\r\n  // const { updatedComponentInFormState} = updateJson;\r\n\r\n  const contexts = GetStateFromData(props.containerId);\r\n  \r\n  const {updateJson, device}=contexts.contexts;\r\n  const {updatedComponentInFormState} =updateJson;\r\n\r\n  useEffect(() => {\r\n  if(!isObjectEmpty(selectedControl))\r\n    setVal(selectKey === \"w\" || selectKey === \"md\" || selectKey === \"sm\" || selectKey === \"xs\" ? selectedControl?.[selectKey] : selectedControl?.style?.[selectKey]);\r\n  },[JSON.stringify(selectedControl)]);\r\n\r\n  const handleChange = (event, value) => {\r\n    setVal(()=>value);\r\n    if(selectKey === \"w\" || selectKey === \"sm\" || selectKey === \"xs\" ){\r\n      if((device === \"web\" && selectKey === \"w\") || (device === \"tablet\" && selectKey === \"sm\") || (device === \"mobile\" && selectKey === \"xs\")){\r\n        selectedControl[selectKey] = value;\r\n        selectedControl[\"md\"] = value;\r\n      } else {\r\n        selectedControl[selectKey] = value;\r\n      }\r\n    } else {\r\n      selectedControl.style[selectKey] = value;\r\n    }\r\n  }\r\n\r\n  function handleMouseUp() {\r\n    updatedComponentInFormState(selectedControl.id , selectedControl)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        containerId={props.containerId}\r\n        classes={{\r\n          root: classes.sliderRoot\r\n        }}\r\n        step={step ? step : 1}\r\n        min={min ? min: 0}\r\n        max={max ? max: 100}\r\n        defaultValue={defaultValue ? defaultValue: 0}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks ? marks : null}\r\n        value={val}\r\n        onChange={handleChange}\r\n        onClick={handleMouseUp}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n    const COLPropertiesJson = {\r\n    \r\n        \"Basic\" :{\r\n            w:\"\",\r\n            slider: { label: \"w\", field: \"w\" },\r\n            heightselect: { field: \"heightselect\" },\r\n            colheight: { label: \"Height\" } \r\n        },\r\n        \"Responsive Behaviour\" :{\r\n            sm: \"\",\r\n            slider3: { label: \"sm\", field: \"sm\" },\r\n            xs: \"\",\r\n            slider4: { label: \"xs\", field: \"xs\" },\r\n            colPadding: { label: \"Remove Padding\", field: \"colPadding\"}\r\n        }   \r\n}\r\n\r\nexport default COLPropertiesJson  ;","import React, { useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport styles from \"../../../LeftNavigation/DesignerControls/BasicControls.module.css\";\r\nimport {Card,Row,Col,Form} from 'react-bootstrap';\r\nimport ToggleBtn from '../../../../ReusableComponents/ToggleBtn/ToggleBtn';\r\nimport ControlsMap from '../../../Properties/PropertiesConfiguration';\r\nimport CollapsibleComponent from '../../../../ReusableComponents/CollapseCard/CollapseCard';\r\nimport COLPropertiesJson from \"../../../Properties/COLPropertiesJson\";\r\nimport ColorPicker from \"../../../../ReusableComponents/ColorPicker/ColorPicker\";\r\nimport ControlLabel from '../../../../ReusableComponents/ControlLabel/ControlLabel';\r\nimport {downloadJson,isColor} from \"../../../../Resources/globalFunctions\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport {useDispatch,addContexts,useSelector} from \"../../../../Redux\"\r\nimport {AppContext} from '../../../../Resources/CanvasContextFile'\r\nimport Slider from \"../../../../UI/BasicFormControls/Slider/Slider\";\r\nimport ActiveIcon from \"../../../../ReusableComponents/ActiveIcon/ActiveIcon\";\r\nimport CustomizedAlert from \"../../../../ReusableComponents/Alert/CustomizedAlert\";\r\nimport ErrorMessageComponent from \"../../../../ReusableComponents/ErrorMessageComponent/ErrorMessageComponent\";\r\nimport { regexValidator } from \"../../../../Resources/globalFunctions\";\r\nimport { validateCustomControlId } from \"../../RequestLogic\";\r\nimport { updateUserId } from \"../../Logic/UserIdLogic\";\r\nimport { GetStateFromData } from '../../../CustomHooks/CustomHooks';\r\n\r\nconst ColumnProperties = (props) => {\r\n  const translationStyles1=window?.depsatkur_configs?.selectedLanguage === \"ar\" || window?.depsatkur_configs?.selectedLanguage === \"ar-SA\";\r\n  const contexts = GetStateFromData(props.containerId);\r\n  \r\n    const { t } = useTranslation(['styles', 'translation']);\r\n    const {updateJson, changeSectionLayout, device, formState2, deleteControl,setQuickToolsClose,customControlIdList,setCustomControlIdList,currentDevice, getElementJson, showAlertConfirmNotifications }=contexts.contexts;\r\n    const { updatedComponentInFormState, removeAndUpdateComponentInFormState} =updateJson;\r\n    const [errorMessageId, setErrorMessageId] = useState(false);  \r\n    const [alertData, setAlertData] = useState({\r\n      open: false,\r\n      showConfirm: \"showNotification\"\r\n  });\r\n    var globalTheme=formState2.theme;\r\n\r\n    \r\n    if(props.selectedControl.style && props?.selectedControl?.style?.[\"heightselect\"] === undefined ){\r\n        props.selectedControl.style[\"heightselect\"] = \"set\";\r\n    }\r\n    \r\n    // const { updateJson,deleteControl } = useContext(AppContext);\r\n    // const { updatedComponentInFormState, removeAndUpdateComponentInFormState} =updateJson;\r\n    // const {changeSectionLayout} = useContext(AppContext);\r\n    // const AppContextVar = useContext(AppContext);\r\n    // var currentDevice;\r\n    \r\n    // if(AppContextVar!==undefined){\r\n    //     globalTheme = AppContextVar.formState2 && AppContextVar.formState2.theme;\r\n    //     currentDevice = AppContextVar.device;\r\n    // }\r\n\r\n\r\n    // console.log(\"Column\")\r\n    // console.log(props.selectedControl);\r\n\r\n    var CollapsibleItems = [];\r\n    Object.keys(COLPropertiesJson).forEach((key,index)=>{\r\n        var collapseComponentBody = [];\r\n        Object.keys(COLPropertiesJson[key]).forEach((property)=>{\r\n            const fetchedProperty = property.replace(/\\d+/g, \"\");\r\n            // console.log(\"col props..\", property,COLPropertiesJson[key],COLPropertiesJson[key][property])\r\n            collapseComponentBody.push(prepareHtmlTag(fetchedProperty,COLPropertiesJson[key][property],ControlsMap[fetchedProperty].type));    \r\n        })\r\n        CollapsibleItems.push(\r\n          <CollapsibleComponent id={index+\"\"} heading={key} body={collapseComponentBody}/>\r\n        );\r\n    })\r\n\r\n   // console.log(\"props..\", device);\r\n\r\n\r\n    // function handleProperty(propertyName, propertyValue, event) {\r\n    //     console.log(\"Col props..\", propertyName, propertyValue);\r\n\r\n    //     let temp_style = props.selectedControl.style;\r\n    //     temp_style[propertyName] = propertyValue;\r\n    //     props.selectedControl.style[propertyName] = propertyValue;\r\n    \r\n    //     updatedComponentInFormState(\r\n    //       props.selectedControl.id,\r\n    //       props.selectedControl\r\n    //     );   \r\n    // }\r\n\r\n    function handleProperty(propertyName, propertyValue, event) {\r\n        //console.log(propertyValue);\r\n    \r\n       // console.log(\"propertyNameMulti \", propertyName);\r\n       // console.log(\"propertyNameMulti \", propertyValue);\r\n\r\n        if(propertyName.includes(\"colheight\")) {\r\n          //  console.log(\"prop..\", props.selectedControl, props.selectedControl.id, document.getElementById(props.selectedControl.id),document.getElementById(props.selectedControl.id).offsetHeight);\r\n            props.selectedControl.style[\"prevheight\"] = document.getElementById(props.selectedControl.id).offsetHeight;\r\n            props.selectedControl.style[propertyName] = propertyValue;\r\n            props.selectedControl.style.colheight1 = propertyValue;\r\n            let parentRow = event.currentTarget.closest(`[elem_type=row]`);\r\n            // let json = getElementJson(formState2, parentRow, \"row\")\r\n            // console.log(\"prop..\", parentRow);   \r\n        } else {\r\n            let temp_style = props.selectedControl.style;\r\n            temp_style[propertyName] = propertyValue;\r\n            props.selectedControl.style[propertyName] = propertyValue;\r\n            if(propertyValue === \"auto\"){\r\n              props.selectedControl.style.colheight = \"auto\";\r\n            }\r\n            else{\r\n              props.selectedControl.style.colheight = props.selectedControl.style?.colheight1;\r\n            }\r\n        }\r\n    \r\n       \r\n    \r\n    \r\n        if(propertyName.includes('Label')){\r\n    \r\n      \r\n          if(propertyValue===\"Regular Italic\"){\r\n              props.selectedControl.style[propertyName] = \"normal\";\r\n              props.selectedControl.style[\"LabelFontStyle\"] = \"italic\";\r\n              }else if(propertyValue===\"Semibold\"){\r\n              props.selectedControl.style[propertyName] = \"600\";\r\n              props.selectedControl.style[\"LabelFontStyle\"] = \"normal\";\r\n              }else if(propertyValue===\"Bold\"){\r\n              props.selectedControl.style[propertyName] = \"bold\";\r\n              props.selectedControl.style[\"LabelFontStyle\"] = \"normal\";\r\n              }else if(propertyValue===\"Regular\"){\r\n              props.selectedControl.style[propertyName] = \"normal\";\r\n              props.selectedControl.style[\"LabelFontStyle\"] = \"normal\";\r\n             }\r\n      \r\n        } else {\r\n            if(propertyValue===\"Regular Italic\"){\r\n                props.selectedControl.style[propertyName] = \"normal\";\r\n                props.selectedControl.style[\"FontStyle\"] = \"italic\";\r\n            } else if(propertyValue===\"Semibold\"){\r\n            props.selectedControl.style[propertyName] = \"600\";\r\n            props.selectedControl.style[\"FontStyle\"] = \"normal\";\r\n            } else if(propertyValue===\"Bold\"){\r\n            props.selectedControl.style[propertyName] = \"bold\";\r\n            props.selectedControl.style[\"FontStyle\"] = \"normal\";\r\n            } else if(propertyValue===\"Regular\"){\r\n                props.selectedControl.style[propertyName] = \"normal\";\r\n                props.selectedControl.style[\"FontStyle\"] = \"normal\";\r\n            }\r\n        }\r\n\r\n        updatedComponentInFormState(\r\n          props.selectedControl.id,\r\n          props.selectedControl\r\n        );\r\n    \r\n        try {\r\n          if (propertyName === \"CustomId\") {\r\n            if (propertyValue !== props.selectedControl.style.CustomId) {\r\n              var element = event.target;\r\n              console.log(\r\n                \"id\",\r\n                props.selectedControl,\r\n                \"propertyValue::\" + propertyValue\r\n              );\r\n              var jsonToSend = {\r\n                customControlId: propertyValue,\r\n                controlid: props.selectedControl.id,\r\n              };\r\n              validateCustomControlId(jsonToSend)\r\n                .then((response) => {\r\n                  if (response && response.data && response.data.status === \"0\") {\r\n                    let temp_style = props.selectedControl.style;\r\n                    // temp_style[propertyName] = propertyValue;\r\n                    // props.selectedControl.style[propertyName] = propertyValue;\r\n                    let updatedJson = updateUserId(\r\n                      props.selectedControl, // whole control Json\r\n                      propertyValue //newly defined id\r\n                      // temp_style[propertyName], //getting previous ControlId\r\n                      // undefined // precedence from formState\r\n                    );\r\n                    if (updatedJson) {\r\n                      updatedComponentInFormState(\r\n                        props.selectedControl.id,\r\n                        updatedJson\r\n                      );\r\n                    }\r\n                  } else if (\r\n                    response &&\r\n                    response.data &&\r\n                    response.data.status === \"-1\"\r\n                  ) {\r\n                    showAlertConfirmNotifications({\r\n                      'open':true,\r\n                      'showConfirm':'showNotification',\r\n                      'alertType':'error',\r\n                      'alertContentKey':\"CustomControl Id already Exist\"\r\n                    });\r\n                    element.value = props.selectedControl.style.CustomId || \"\";\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  // handle error\r\n                  element.value = props.selectedControl.style.CustomId || \"\";\r\n                  console.log(error);\r\n                  console.log(\"Server side error \" + error);\r\n                });\r\n            }\r\n          } \r\n          // else if (\r\n          //   event &&\r\n          //   event.which !== 8 &&\r\n          //   event.which !== 46 &&\r\n          //   !regexValidator(\r\n          //     String.fromCharCode(event.which),\r\n          //     ControlsMap[propertyName][\"regexType\"]\r\n          //   )\r\n          // ) {\r\n          //   event.preventDefault();\r\n          //   //setErrorMessageId(inputBoxId);\r\n          //   setAlertData({\r\n          //     ...ControlsMap[\"customizedAlertNotificationData\"],\r\n          //     open: true,\r\n          //     alertContentKey: \"RegexErrorMessage\",\r\n          //   });\r\n          // } \r\n          else {\r\n            let temp_style = props.selectedControl.style;\r\n            temp_style[propertyName] = propertyValue;\r\n            props.selectedControl.style[propertyName] = propertyValue;\r\n            updatedComponentInFormState(\r\n              props.selectedControl.id,\r\n              props.selectedControl\r\n            );\r\n            setErrorMessageId(false);\r\n          }\r\n        } catch (e) {\r\n        }\r\n        \r\n    }\r\n\r\n    function validateRegex(propertyName, propertyValue, event, inputBoxId) {\r\n        try {\r\n          if (\r\n            event &&\r\n            event.which !== 8 &&\r\n            event.which !== 46 &&\r\n            event.code !== \"Tab\" &&\r\n            !regexValidator(\r\n              String.fromCharCode(event.which),\r\n              ControlsMap[propertyName][\"regexType\"]\r\n            )\r\n          ) {\r\n            event.preventDefault();\r\n            // setErrorMessageId(inputBoxId);\r\n            setAlertData({\r\n              ...ControlsMap[\"customizedAlertNotificationData\"],\r\n              open: true,\r\n              alertContentKey: \"RegexErrorMessage\",\r\n            });\r\n          } else {\r\n            setErrorMessageId(false);\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while validating regex\");\r\n        }\r\n      }\r\n\r\n\r\n\r\n    function selectedOptionForLabel(selectedControlId,selectedControlLabel,ControlLabelKey)\r\n    {\r\n      \r\n       var select = document.getElementById(selectedControlId+ControlLabelKey);\r\n       var option_tag = select.options[select.selectedIndex];\r\n              \r\n        let temp_style = props.selectedControl;\r\n        temp_style[ControlLabelKey] = parseInt(option_tag.value);\r\n\r\n        if(props.selectedControl[\"style\"] === undefined){\r\n            props.selectedControl[\"style\"] = {}\r\n        }\r\n        if(ControlLabelKey === \"w\" || ControlLabelKey === \"sm\" || ControlLabelKey === \"xs\") {\r\n            if((device === \"web\" && ControlLabelKey === \"w\") || (device === \"tablet\" && ControlLabelKey === \"sm\") || (device === \"mobile\" && ControlLabelKey === \"xs\")){\r\n                props.selectedControl[ControlLabelKey] = parseInt(option_tag.value);\r\n                props.selectedControl[\"md\"] = parseInt(option_tag.value);\r\n            } else {\r\n                props.selectedControl[ControlLabelKey] = parseInt(option_tag.value);\r\n            }\r\n        } else {\r\n            props.selectedControl[\"style\"][ControlLabelKey] = parseInt(option_tag.value);\r\n        }\r\n        \r\n        \r\n\r\n        if (currentDevice!==undefined){\r\n           // console.log(\"COl props..\", \"hello\",  currentDevice)\r\n            if(currentDevice==='web'){\r\n                props.selectedControl[\"w\"] = parseInt(option_tag.value); \r\n            } else if(currentDevice==='tablet'){\r\n                props.selectedControl['sm'] =  parseInt(option_tag.value); \r\n            } else if(currentDevice==='mobile') {\r\n                props.selectedControl['xs'] =  parseInt(option_tag.value); \r\n            }\r\n        } else {\r\n            console.log('Issue with the device selector!');\r\n        }\r\n    \r\n       // console.log(\"COl props..\", props.selectedControl.id);\r\n        updatedComponentInFormState(props.selectedControl.id , props.selectedControl)\r\n       \r\n    }\r\n\r\n   // console.log(\"COl props..\", props.selectedControl, currentDevice);\r\n    \r\n   function handleToggle(e, field) {\r\n    const value = e.target.value;\r\n\r\n    props.selectedControl.style[field] = value;\r\n\r\n    updatedComponentInFormState(\r\n      props.selectedControl.id,\r\n      props.selectedControl\r\n    );\r\n  }\r\n\r\n    function prepareHtmlTag(key,value,type) {\r\n        \r\n        switch(type.toLowerCase()){\r\n            case \"header\" : return(\r\n                <p className={styles.propertiesHeaderColumn}>{t(`translation:${ControlsMap[key].label}`)}</p>\r\n            )\r\n\r\n            case \"toggle\":\r\n              return (\r\n                <div\r\n                  className={\r\n                    value.field === \"showIcon\" ? \"customToggleBtn1\" : \"toggleBtn\"\r\n                  }\r\n                >\r\n                  <span> {t(`translation:${ControlsMap[key].label}`)} </span>\r\n                  <ToggleBtn\r\n                    key={props.selectedControl.id}\r\n                    handleToggle={handleToggle}\r\n                    field={value.field}\r\n                    toggleState={props?.selectedControl?.style?.[value.field]}\r\n                  />\r\n                </div>\r\n              );\r\n    \r\n            case \"combo\" : return(\r\n                <>\r\n                <div className={styles.parentDiv} style={translationStyles1?{display:\"flex\"}:null}>\r\n                    <span className={styles.leftLabel}>{t(`translation:${ControlsMap[key].label}`)}</span>\r\n                    <div className={styles.ColumnSelectForText1}>\r\n                        <select \r\n                            id={props.selectedControl.id+key} \r\n                            value={(key === \"w\" || key === \"sm\" || key === \"xs\") ? props.selectedControl[key] : props.selectedControl.style[key]}\r\n                            className={styles.ColumnSelectForText2} \r\n                            onChange={()=>selectedOptionForLabel(props.selectedControl.id,ControlsMap[key].label,key)}\r\n                        >\r\n                        {ControlsMap[key].children.map((optionTagData,optionCount)=>{\r\n                            if(ControlsMap[key].children[optionCount].Value){\r\n                                return <> \r\n                                {ControlsMap[key].children[optionCount].Value ===  props.selectedControl[key] ?\r\n                                <option style={ControlsMap[key].children[optionCount]?.style} value={ControlsMap[key].children[optionCount].Value} selected>\r\n                                  \r\n                                  {t(`translation:${ControlsMap[key].children[optionCount].Title}`)}\r\n                                </option>\r\n                                :\r\n                                <option style={ControlsMap[key].children[optionCount]?.style} value={ControlsMap[key].children[optionCount].Value} >{t(`translation:${ControlsMap[key].children[optionCount].Title}`)}</option>} \r\n                                </>\r\n                            }\r\n                        })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            )  \r\n            \r\n            case \"slider\":  \r\n            return(\r\n                <div\r\n                key={props.selectedControl && props.selectedControl.style && props.selectedControl.style[value.field]}\r\n                >\r\n                    <Slider containerId={props.containerId} selectedControl={props.selectedControl} selectKey={value.field} min={1} max={12} marks={[{value: 1, label: '1'},{value: 12, label: '12'}]} />\r\n                </div>\r\n            )\r\n\r\n            case \"heightselect\":\r\n            return (\r\n                <>\r\n                    <div \r\n                    style={{\r\n                        font: \"normal normal normal 12px/12px Open Sans\",\r\n                        letterSpacing: \"0px\",\r\n                        color: \"#000000\",\r\n                        opacity: 1,\r\n                    }}\r\n                    > \r\n                    {t(`translation:${\"Height\"}`)} \r\n                    </div>\r\n                    <ActiveIcon\r\n                        activeStyle={{\r\n                            padding: \"12px 0\",\r\n                            width: \"122px\",\r\n                            height: \"40px\",\r\n                            border: \"2px solid #0072C6\",\r\n                            borderRadius: \"2px 0px 0px 2px\",\r\n                            background: \"#fff\",\r\n                            margin: \"0px\",\r\n                            color: \"#0072C6\",\r\n                            font: \"normal normal 600 12px/12px Open Sans\",\r\n                        }}\r\n                        property={value.field}\r\n                        inActiveStyle={{\r\n                            padding: \"12px 0\",\r\n                            width: \"124px\",\r\n                            height: \"40px\",\r\n                            border: \"1px solid #C4C4C4\",\r\n                            borderRadius: \"2px 0px 0px 2px\",\r\n                            background: \"#fff\",\r\n                            margin: \"0px\",\r\n                            color: \"#C4C4C4\",\r\n                            font: \"normal normal 600 12px/12px Open Sans\",\r\n                        }}\r\n                        passedValue={props?.selectedControl?.style?.[\"heightselect\"]}\r\n                        defaultValue={props?.selectedControl?.style?.[\"heightselect\"]}\r\n                        handleStyleType={handleProperty}\r\n                    >\r\n                        <span value=\"auto\">{t(`translation:${\"Auto Height\"}`)}</span>\r\n                        <span value=\"set\">{t(`translation:${\"Set Height\"}`)}</span>\r\n                    </ActiveIcon>\r\n                </>\r\n            );\r\n            \r\n            case \"text\" : return(\r\n                props?.selectedControl?.style?.[\"heightselect\"] === \"set\"  &&\r\n                <div className={styles.parentDiv} style={translationStyles1?{display:\"flex\"}:null}>\r\n                    <span className={styles.leftLabel}> {t(`translation:${value.label}`)} </span>\r\n                    <div className={styles.RightTextBox}>\r\n                    {\r\n                        <input \r\n                            type=\"text\"  \r\n                            aria-label={\"Control Value1\"}\r\n                            defaultValue={props.selectedControl.style[key]} \r\n                            key={props.selectedControl.id}\r\n                            id={props.selectedControl.id+key} \r\n                            className={[styles.RightLabelTextBox, errorMessageId === (props.selectedControl.id+key) ? styles.inputBoxErrorStyle : null].join(\" \")}\r\n                            // onKeyPress={(event)=>validateRegex(key, event.target.value,event,props.selectedControl.id+key)}\r\n                            // onKeyUp={(event)=>validateRegex(key, event.target.value,event,props.selectedControl.id+key)}\r\n                            onBlur={(event)=>handleProperty(key, event.target.value,event)}\r\n                        />  \r\n                    }\r\n                    </div>\r\n                    {errorMessageId === (props.selectedControl.id+key) ? <ErrorMessageComponent errorMessage=\"non-permissible value\"/> : null}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <ControlLabel label=\"Column\" handleDelete={deleteControl} id={props.selectedControl.id} />\r\n            <div className=\"propertiesBody\">\r\n                <Card.Body className={styles.cardBodySheetProperties}>\r\n                {\r\n                    CollapsibleItems.map((item, index) => {\r\n                        return item;\r\n                    })\r\n                }\r\n                </Card.Body>\r\n            </div>\r\n            {\r\n              alertData.open === true &&\r\n            <CustomizedAlert alertData={alertData} />\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ColumnProperties;"],"sourceRoot":""}